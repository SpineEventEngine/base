/*
 * Copyright 2021, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import org.apache.tools.ant.taskdefs.condition.Os

final def publicationDir = "$buildDir/pub/publication/$project.name"
final def extension = Os.isFamily(Os.FAMILY_WINDOWS) ? '.bat' : ''
final def PUB_EXECUTABLE = 'pub' + extension

task stagePubPublication(type: Copy) {
    description = 'Prepares the Dart package for Pub publication.'

    from fileTree(projectDir) {
        include '**/*.dart', 'pubspec.yaml', '**/*.md'
        exclude 'proto/', 'generated/', 'build/', '**/.*'
    }
    from "$rootDir/LICENSE"
    into publicationDir

    doLast {
        logger.debug("Prepared Pub publication in directory `$publicationDir`.")
    }

    dependsOn 'assemble'
}

/**
 *  A Dart analog of {@code publish}.
 */
task publishToPub(type: Exec) {
    description = 'Publishes this package to Pub.'

    workingDir publicationDir
    commandLine PUB_EXECUTABLE, 'publish', '--trace'
    final sayYes = new ByteArrayInputStream('y'.getBytes())
    standardInput(sayYes)

    dependsOn 'stagePubPublication'
}

/**
 *  A Dart analog of {@code publishToMavenLocal}.
 */
task activateLocally(type: Exec) {
    description = 'Activates this package locally.'

    commandLine PUB_EXECUTABLE, 'global', 'activate', '--source', 'path', publicationDir, '--trace'

    workingDir publicationDir
    dependsOn 'stagePubPublication'
}

tasks['publish'].dependsOn 'publishToPub'
