syntax = "proto3";

package spine.test.validation.dart;

import "spine/options.proto";
import "spine/people/person_name.proto";
import "spine/net/email_address.proto";

option (type_url_prefix) = "type.spine.io";

message PhoneNumber {

    // The phone number in the E.164 recommended format.
    //
    // See https://en.wikipedia.org/wiki/E.164
    //
    string digits = 1 [(required) = true, (pattern).regex = "\\+?\\d{4,15}"];
}

message Contact {

    people.PersonName name = 1 [(required) = true];

    PhoneNumber phone = 2 [(required) = false];

    Category category = 3 [(required) = true];

    repeated net.EmailAddress email = 4 [(required) = true];

    enum Category {

        CC_UNKNOWN = 0;
        WORK = 1;
        PERSONAL = 2;
        OTHER = 3;
    }
}

message Contacts {

    repeated Contact contact = 1 [(distinct) = true];
}

message ContactBook {

    map<uint32, Contacts> contact_by_category = 1 [(required) = true, (distinct) = true];
}

message LocalTime {

    uint32 hours = 1 [(range) = "[0..23]"];

    uint32 minutes = 2 [(range) = "[0..60)"];

    int32 seconds = 3 [(range) = "(-1..+59]"];

    int32 millis = 4 [(min).value = "0", (max).value = "999"];
}

message Duration {

    sint64 millis = 1;

    sfixed32 nanos = 2 [(range) = "(-1000..1000)"];
}

message BinaryFile {

    string path = 1 [(required) = true];

    string owner = 2 [(required) = false];

    bytes content = 3 [(required) = true];
}

message LotteryTicket {

    repeated uint32 numbers = 1 [(required) = true, (range) = "[1..69]"];

    uint32 magic_number = 2 [(range) = "[1..69]"];
}
