syntax = "proto3";

package spine.tools.protoc;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.tools.protoc";
option java_outer_classname = "ConfigProto";
option java_multiple_files = true;

option (internal_all) = true;

// Interface to mark UUID messages.
//
// An empty value signifies that the messages should not be marked.
//
message UuidInterface {

    string interface_name = 1;
}

// Interface to mark messages defined in a file with a certain name postfix.
//
message GeneratedInterface {

    string interface_name = 1;

    // A file pattern that defines which message types should implement the interface.
    FilePattern pattern = 2;
}

// Interface to mark Enrichment messages.
//
// An empty value signifies that the messages should not be marked.
//
message EnrichmentInterface {

    string interface_name = 1;
}

// Method factory that creates additional methods for Enrichment messages.
//
// An empty value signifies that the additional methods should not be generated.
//
message EnrichmentMethod {

    // A fully-qualified name of the message factory class.
    string factory_name = 1;
}

// Method factory that creates additional methods for UUID messages.
//
// An empty value signifies that the additional methods should not be generated.
//
message UuidMethod {

    // A fully-qualified name of the message factory class.
    string factory_name = 1;
}

// Method factory that creates additional methods for a certain message(s).
//
// An empty value signifies that the additional methods should not be generated.
//
message GeneratedMethod {

    // A fully-qualified name of the message factory class.
    string factory_name = 1;

    // A file pattern that defines for which message types the message factory should be called.
    FilePattern pattern = 2;
}

// File pattern which is used to filter messages.
//
message FilePattern {

    oneof value {

        // An ending that a .proto file name should have.
        //
        // If a .proto file matches current ending, to all its messages some code generation
        // will be applied.
        //
        string file_postfix = 1;

        // A prefix that a .proto file name should have.
        //
        // If a .proto file matches current prefix, to all its messages some code generation
        // will be applied.
        //
        string file_prefix = 2;
    }
}

// Configuration of the Spine Protoc plugin interfaces generation.
//
message GeneratedInterfacesConfig {

    repeated GeneratedInterface generated_interface = 1;

    UuidInterface uuid_interface = 2;

    EnrichmentInterface enrichment_interface = 3;
}

// A container for the java classpath items.
//
message Classpath {

    // An absolute OS-dependent path to a particular classpath JAR.
    repeated string jar = 1;
}

// Configuration of the Spine Protoc method factory.
//
message MethodFactoryConfiguration {

    Classpath classpath = 1;
}

// Configuration of the Spine Protoc plugin methods generation.
//
message GeneratedMethodsConfig {

    repeated GeneratedMethod generated_method = 1;

    UuidMethod uuid_method = 2;

    EnrichmentMethod enrichment_method = 3;

    reserved 4 to 14;

    MethodFactoryConfiguration factory_configuration = 15;
}

// Configuration of the Spine Protoc plugin.
//
// The configuration is passed to the plugin as the single option. The passed value is serialized
// and base-64 encoded.
//
message SpineProtocConfig {

    GeneratedInterfacesConfig generated_interfaces = 1;

    GeneratedMethodsConfig generated_methods = 2;
}
