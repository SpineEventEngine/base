syntax = "proto3";

package spine.tools.protoc;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.tools.protoc";
option java_outer_classname = "ConfigProto";
option java_multiple_files = true;

option (internal_all) = true;

// Interface to mark UUID messages.
//
// An interface name signifies that the additional methods should not be generated.
//
message UuidInterface {

    // A fully-qualified name of the message interface class.
    string interface_name = 1;
}

// Interface to mark messages defined in a file with a certain pattern.
//
// An interface name signifies that the additional methods should not be generated.
//
message GeneratedInterface {

    // A fully-qualified name of the message interface class.
    string interface_name = 1;

    // A file pattern that defines which message types should implement the interface.
    FilePattern pattern = 2;
}

// Method factory that creates additional methods for UUID messages.
//
// An empty value signifies that the additional methods should not be generated.
//
message UuidMethod {

    // A fully-qualified name of the message factory class.
    string factory_name = 1;
}

// Method factory that creates additional methods for a certain message(s).
//
// An empty factory name signifies that the additional methods should not be generated.
//
message GeneratedMethod {

    // A fully-qualified name of the message factory class.
    string factory_name = 1;

    // A file pattern that defines for which message types the message factory should be called.
    FilePattern pattern = 2;
}

// File pattern which is used to filter messages.
//
message FilePattern {

    oneof value {

        // An ending that a .proto file's full name end with.
        //
        // If a .proto file matches the postfix, to all its messages some code generation
        // will be applied.
        //
        string file_postfix = 1;

        // A prefix that a .proto file's full name start with.
        //
        // If a .proto file matches the prefix, to all its messages some code generation
        // will be applied.
        //
        string file_prefix = 2;

        // A regex a .proto file's full name should match.
        //
        // If a .proto file matches the regex, to all its messages some code generation will
        // be applied.
        //
        string regex = 3;
    }
}

// Configuration of the Spine Protoc plugin interfaces generation.
//
message GeneratedInterfacesConfig {

    repeated GeneratedInterface generated_interface = 1;

    UuidInterface uuid_interface = 2;

    // Reserved for future configurations.
    reserved 4 to 15;
}

// A container for the java classpath items.
//
message Classpath {

    // An absolute OS-dependent path to a particular classpath JAR.
    repeated string jar = 1;
}

// Configuration of the Spine Protoc method factory.
//
message MethodFactoryConfiguration {

    // Java classpath of a project for which code generation is performed
    Classpath classpath = 1;
}

// Configuration of the Spine Protoc plugin methods generation.
//
message GeneratedMethodsConfig {

    repeated GeneratedMethod generated_method = 1;

    UuidMethod uuid_method = 2;

    // Reserved for future configurations.
    reserved 4 to 14;

    // Method Factory configuration.
    //
    MethodFactoryConfiguration factory_configuration = 15;
}

// Configuration of the Spine Protoc plugin.
//
// The configuration is passed to the plugin as the single option. The passed value is serialized
// and base-64 encoded.
//
message SpineProtocConfig {

    // Interfaces configuration.
    //
    GeneratedInterfacesConfig generated_interfaces = 1;

    // Methods configuration.
    //
    GeneratedMethodsConfig generated_methods = 2;
}
