/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package io.spine.js.generate.typeurl;

import io.spine.code.proto.Type;
import io.spine.js.generate.JsCodeGenerator;
import io.spine.js.generate.JsOutput;
import io.spine.js.generate.JsType;
import io.spine.type.TypeUrl;

/**
 * For a specific type generates a method providing {@code TypeUrl}.
 */
class TypeUrlMethod extends JsCodeGenerator {

    private static final String METHOD_NAME = "typeUrl";

    private final JsType type;

    TypeUrlMethod(Type type, JsOutput jsOutput) {
        super(jsOutput);
        this.type = JsType.generatedFrom(type);
    }

    @Override
    public void generate() {
        generateStaticMethod();
        jsOutput().addEmptyLine();
        generateInstanceMethod();
    }

    /**
     * Generates an instance method.
     */
    private void generateInstanceMethod() {
        commentGenerated();
        jsOutput().enterMethod(instanceMethodName());
        jsOutput().returnValue(staticMethodName() + "()");
        jsOutput().exitMethod();
    }

    /**
     * Generates the static version of the method.
     */
    private void generateStaticMethod() {
        TypeUrl typeUrl = type.url();
        commentGenerated();
        jsOutput().enterMethod(staticMethodName());
        jsOutput().returnString(typeUrl.value());
        jsOutput().exitMethod();
    }

    private void commentGenerated() {
        jsOutput().addComment("Generated by Spine ProtoJs Plugin");
    }

    private String staticMethodName() {
        return type.staticMethod(METHOD_NAME);
    }

    private String instanceMethodName() {
        return type.instanceMethod(METHOD_NAME);
    }
}
