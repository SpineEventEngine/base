/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

buildscript {
    apply from: "$rootDir/config/gradle/dependencies.gradle"
    apply from: "$rootDir/version.gradle"

    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath deps.build.gradlePlugins.protobuf
    }
}

repositories {
    jcenter()
    google()
    mavenCentral()
    mavenLocal()
    maven { url = repos.gradlePlugins }
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

project.compileJava.enabled = false
project.compileTestJava.enabled = false

task compileProtoToJs

protobuf {
    generatedFilesBaseDir = "$projectDir/proto"
    protoc {
        artifact = deps.build.protoc
    }
    generateProtoTasks {
        all().each { final task ->
            task.builtins {
                remove java

                js {
                    option "import_style=commonjs"
                }
            }
            task.generateDescriptorSet = true
            task.descriptorSetOptions.path = "${projectDir}/build/descriptors/${task.sourceSet.name}/known_types.desc"
            task.descriptorSetOptions.includeImports = true
            task.descriptorSetOptions.includeSourceInfo = true

            compileProtoToJs.dependsOn task
        }
    }
}

build.dependsOn compileProtoToJs

dependencies {
    protobuf "io.spine:spine-base:${spineVersion}"
    implementation "io.spine:spine-base:$spineVersion"
}
