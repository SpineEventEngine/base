/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.test.tools.validate;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.test.tools.validate.avocado";
option java_outer_classname = "AvocadoFarmProto";
option java_multiple_files = true;

message GreenhouseId {

    string uuid = 1;
}

message Greenhouse {

    GreenhouseId id = 1;

    uint32 capacity = 2 [(min).value = "10"];

    uint32 tree_count = 3;

    TemperatureRange temperature = 4 [(required) = true, (.validate) = true];

    HumidityRange humidity = 5 [(required) = true, (.validate) = true];

    repeated Sort sort = 6 [(required) = false, (distinct) = true];

    oneof lighting {
        option (is_required) = true;

        LightBulb incandescent = 7 [deprecated = true];

        UvLightStrip uv = 8;
    }
}

message Sort {
    string name = 1 [(required) = true];
}

message Temperature {

    float degrees_celsius = 1 [(range) = "(-50 .. +50)"];
}

message TemperatureRange {

    Temperature lowest_allowed = 1 [(required) = true, (.validate) = true];

    Temperature highest_allowed = 2 [(required) = true, (.validate) = true];
}

message Humidity {

    float percent = 1 [(range) = "0.0..100.0"];
}

message HumidityRange {

    Humidity lowest_allowed = 1 [(required) = true, (.validate) = true];

    Humidity highest_allowed = 2 [(required) = true, (.validate) = true];
}

message LightBulb {
    uint32 wattage = 1 [(min).value = "1"];
}

message UvLightStrip {
    float min_wave_length = 1;
    float max_wave_length = 2;
}
