/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// Common build file for the tests with same configuration

buildscript {

    // NOTE: this file is copied from the root project in the test setup.
    apply from: "$rootDir/testEnv.gradle"

    apply from: "$enclosingRootDir/config/gradle/dependencies.gradle"
    apply from: "$enclosingRootDir/version.gradle"

    repositories {
        mavenLocal()
        jcenter()
        
        maven { url = repos.spine }
        maven { url = repos.spineSnapshots }
    }

    dependencies {
        classpath deps.build.protobuf

        // Exclude `guava:18.0` as a transitive dependency by Protobuf Gradle plugin.
        classpath (deps.build.gradlePlugins.protobuf) {
            exclude group: 'com.google.guava'
        }
        classpath "io.spine.tools:spine-model-compiler:${spineVersion}"
    }

    configurations.all({
        resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
    })
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'io.spine.tools.spine-model-compiler'

repositories {
    mavenLocal()
    jcenter()
    
    maven { url = repos.spine }
    maven { url = repos.spineSnapshots }
}

dependencies {
    implementation "io.spine:spine-base:$spineVersion"
}

dependencies()

sourceSets {
    main {
        proto.srcDirs     "$projectDir/src/main/proto"
        java.srcDirs      "$projectDir/generated/main/java", "$projectDir/generated/main/spine"
        resources.srcDirs "$projectDir/generated/main/resources"
    }
}
