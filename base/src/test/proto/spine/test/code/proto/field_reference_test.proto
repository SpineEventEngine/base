/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.test.code.proto;

import "spine/options.proto";

import "google/protobuf/any.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.test.code.proto";
option java_outer_classname = "FieldReferenceTestProto";
option java_multiple_files = true;

// Declaration for use in `FieldReferenceTest` only.

// A name of a human user.
message PersonName {
    string given_name = 1 [(required) = true];
    string family_name = 3;
}

// An enrichment for all events that reference users.
//
// See `field_reference_test_events.proto`.
//
message UserInfo {

    option (enrichment_for) = "spine.test.code.proto.*";

    // Provides person name by alternative field references.
    //
    // The first reference is to all messages containing the `user_id` field.
    //
    // The second alternative is to the `editor_id` field of the `DocumentUpdated`. The event is
    // in the same package with this message.
    //
    // The third alternative is to the field `actor` field of the `CommandContext` type, which
    // is referenced by the `command_context` field of the `EventContext` type.
    //
    PersonName person_name = 1 [(by) = "user_id|editor_id|context.command_context.actor"];
}
