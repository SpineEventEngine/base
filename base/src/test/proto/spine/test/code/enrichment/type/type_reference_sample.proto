/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.test.code.enrichment.type;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.test.code.enrichment.type";
option java_outer_classname = "TypeReferenceSampleProto";
option java_multiple_files = true;

// This file is a sample of referencing messages in other packages using
// short package references. That's why it imports test environment definitions
// of other tests below.

import "spine/test/code/enrichment/type/user/ett_user_events.proto";
import "spine/test/code/enrichment/field_def_test_enr.proto";
import "spine/test/code/proto/field_reference_test.proto";
import "spine/test/validate/alt_fields.proto";
import "spine/test/identifiers_test.proto";

// This type is for checking outside and nested package references.
message EttReferenceTest {

    // This is a reference by the nested package.
    user.EttUserLoggedInEvent sub_pack_message = 1;

    // This is a reference to a message which is in the package one level up.
    FdtUserProfile level_up_message = 2;

    // This is a reference to a message going two levels up, and one down to another sub-package.
    proto.PersonName sibling_package_message = 3;

    // The message way top, and in a different branch.
    validate.PersonName upper_sibling_message = 4;

    // This is a reference in a file top in the hierarchy, but which has the sibling package.
    identifiers.NestedMessageId another_sibling_message = 5;
}
