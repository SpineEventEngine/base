/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.test.validation;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_multiple_files = true;
option java_outer_classname = "TestRangeOptionProto";
option java_package = "io.spine.test.validate";

// Messages for "range" option tests.

message NumRanges {
    int32 hour = 1 [(range) = "[0..24)"];
    uint64 minute = 2 [(range) = "[0..59]"];
    float degree = 3 [(range) = "[0.0..360.0)"];
    double angle = 4 [(range) = "(0.0..180.0)"];
}

message RangesHolder {
    NumRanges ranges = 1 [(validate) = true];
}

message HalfRangesConstraint {
    option (constraint_for) = "spine.test.validation.RangesHolder.ranges";

    int32 hour = 1 [(range) = "[0..12)"];
    uint64 minute = 2 [(range) = "[0..30]"];
    float degree = 3 [(range) = "[0.0..180.0)"];
    double angle = 4 [(range) = "(0.0..90.0)"];
}

message Hours {
    repeated int32 hour = 1 [(range) = "[0..23]"];
}
