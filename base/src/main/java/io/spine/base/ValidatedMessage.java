/*
 * Copyright 2020, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package io.spine.base;

import io.spine.protobuf.Messages;
import io.spine.protobuf.ValidatingBuilder;

/**
 * A message generated by Spine Model Compiler.
 *
 * //TODO:2020-12-27:alexander.yevsyukov: To be merged into `KnownMessage`.
 */
public interface ValidatedMessage<B extends ValidatingBuilder<M>, M extends ValidatedMessage<B, M>>
    extends KnownMessage {

    /**
     * Obtains the instance of the builder for the passed message class.
     *
     * @param messageClass
     *          the class of the message to be created by the returned builder
     * @param <B>
     *          the type of the builder
     * @param <M>
     *          the type of the message
     * @return a new empty builder
     */
    static <B extends ValidatingBuilder<M>, M extends ValidatedMessage<B, M>>
    B builderOf(Class<? extends M> messageClass) {
        @SuppressWarnings("unchecked") // the case is protected by generic params of the interface
        B builder = (B) Messages.builderFor(messageClass);
        return builder;
    }
}
