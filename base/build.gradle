/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

group = 'io.spine'

configurations {
    // Avoid collisions of Java classes defined both in `protobuf-lite` and `protobuf-java`
    runtime.exclude group: "com.google.protobuf", module: "protobuf-lite"
    testRuntime.exclude group: "com.google.protobuf", module: "protobuf-lite"
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

apply from: deps.scripts.generateDescriptorSet
apply from: deps.scripts.testArtifacts

dependencies {
    testCompile project(path: ":testlib")
}

protobuf {
    generatedFilesBaseDir = generatedRootDir
    protoc {
        artifact = deps.build.protoc
    }

    generateProtoTasks {
        all().each { final task ->
            task.descriptorSetOptions.includeSourceInfo = true

            /*
               The below code removes deprecation annotations from the code generated by
               Protobuf compiler.
               See details here: https://github.com/google/protobuf/issues/2054
             */
            task.doLast {
                ant.replaceregexp(
                        match:   '@java.lang.Deprecated|@deprecated',
                        replace: '',
                        flags:   'g',
                        byline:  true
                ) {
                    fileset(dir: "$protobuf.generatedFilesBaseDir/main/java")

                    final generatedTests = "$protobuf.generatedFilesBaseDir/test/java"
                    if (new File(generatedTests).exists()) {
                        fileset(dir: generatedTests)
                    }
                }
            }
        }
    }
}

clean {
    delete "$projectDir/generated"
}
