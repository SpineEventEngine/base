[{"name":"AccessorTemplate primarySetterTemplate()","description":"io.spine.tools.compiler.field.type.MapFieldType.primarySetterTemplate","location":"model-compiler/io.spine.tools.compiler.field.type/-map-field-type/primary-setter-template.html","searchKeys":["primarySetterTemplate","AccessorTemplate primarySetterTemplate()","io.spine.tools.compiler.field.type.MapFieldType.primarySetterTemplate"]},{"name":"AccessorTemplate primarySetterTemplate()","description":"io.spine.tools.compiler.field.type.RepeatedFieldType.primarySetterTemplate","location":"model-compiler/io.spine.tools.compiler.field.type/-repeated-field-type/primary-setter-template.html","searchKeys":["primarySetterTemplate","AccessorTemplate primarySetterTemplate()","io.spine.tools.compiler.field.type.RepeatedFieldType.primarySetterTemplate"]},{"name":"AccessorTemplate primarySetterTemplate()","description":"io.spine.tools.compiler.field.type.SingularFieldType.primarySetterTemplate","location":"model-compiler/io.spine.tools.compiler.field.type/-singular-field-type/primary-setter-template.html","searchKeys":["primarySetterTemplate","AccessorTemplate primarySetterTemplate()","io.spine.tools.compiler.field.type.SingularFieldType.primarySetterTemplate"]},{"name":"Annotator createFieldAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createFieldAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/create-field-annotator.html","searchKeys":["createFieldAnnotator","Annotator createFieldAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createFieldAnnotator"]},{"name":"Annotator createFileAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createFileAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/create-file-annotator.html","searchKeys":["createFileAnnotator","Annotator createFileAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createFileAnnotator"]},{"name":"Annotator createMessageAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createMessageAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/create-message-annotator.html","searchKeys":["createMessageAnnotator","Annotator createMessageAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createMessageAnnotator"]},{"name":"Annotator createMethodAnnotator(ClassName annotation, ImmutableSet<MethodPattern> patterns)","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createMethodAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/create-method-annotator.html","searchKeys":["createMethodAnnotator","Annotator createMethodAnnotator(ClassName annotation, ImmutableSet<MethodPattern> patterns)","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createMethodAnnotator"]},{"name":"Annotator createPatternAnnotator(ClassName annotation, ClassNamePattern pattern)","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createPatternAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/create-pattern-annotator.html","searchKeys":["createPatternAnnotator","Annotator createPatternAnnotator(ClassName annotation, ClassNamePattern pattern)","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createPatternAnnotator"]},{"name":"Annotator createServiceAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createServiceAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/create-service-annotator.html","searchKeys":["createServiceAnnotator","Annotator createServiceAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.createServiceAnnotator"]},{"name":"ClassName betaClassName()","description":"io.spine.tools.gradle.compiler.CodeGenAnnotations.betaClassName","location":"model-compiler/io.spine.tools.gradle.compiler/-code-gen-annotations/beta-class-name.html","searchKeys":["betaClassName","ClassName betaClassName()","io.spine.tools.gradle.compiler.CodeGenAnnotations.betaClassName"]},{"name":"ClassName experimentalClassName()","description":"io.spine.tools.gradle.compiler.CodeGenAnnotations.experimentalClassName","location":"model-compiler/io.spine.tools.gradle.compiler/-code-gen-annotations/experimental-class-name.html","searchKeys":["experimentalClassName","ClassName experimentalClassName()","io.spine.tools.gradle.compiler.CodeGenAnnotations.experimentalClassName"]},{"name":"ClassName internalClassName()","description":"io.spine.tools.gradle.compiler.CodeGenAnnotations.internalClassName","location":"model-compiler/io.spine.tools.gradle.compiler/-code-gen-annotations/internal-class-name.html","searchKeys":["internalClassName","ClassName internalClassName()","io.spine.tools.gradle.compiler.CodeGenAnnotations.internalClassName"]},{"name":"ClassName spiClassName()","description":"io.spine.tools.gradle.compiler.CodeGenAnnotations.spiClassName","location":"model-compiler/io.spine.tools.gradle.compiler/-code-gen-annotations/spi-class-name.html","searchKeys":["spiClassName","ClassName spiClassName()","io.spine.tools.gradle.compiler.CodeGenAnnotations.spiClassName"]},{"name":"Configuration setupPreprocessorConfig()","description":"io.spine.tools.compiler.check.PreprocessorConfigurer.setupPreprocessorConfig","location":"model-compiler/io.spine.tools.compiler.check/-preprocessor-configurer/setup-preprocessor-config.html","searchKeys":["setupPreprocessorConfig","Configuration setupPreprocessorConfig()","io.spine.tools.compiler.check.PreprocessorConfigurer.setupPreprocessorConfig"]},{"name":"DefaultJavaProject defaultProject(Project project)","description":"io.spine.tools.gradle.compiler.Extension.defaultProject","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/default-project.html","searchKeys":["defaultProject","DefaultJavaProject defaultProject(Project project)","io.spine.tools.gradle.compiler.Extension.defaultProject"]},{"name":"ERROR","description":"io.spine.tools.gradle.compiler.Severity.ERROR","location":"model-compiler/io.spine.tools.gradle.compiler/-severity/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","io.spine.tools.gradle.compiler.Severity.ERROR"]},{"name":"FileVisitResult postVisitDirectory(Path dir, IOException e)","description":"io.spine.tools.compiler.DirectoryCleaner.postVisitDirectory","location":"model-compiler/io.spine.tools.compiler/-directory-cleaner/post-visit-directory.html","searchKeys":["postVisitDirectory","FileVisitResult postVisitDirectory(Path dir, IOException e)","io.spine.tools.compiler.DirectoryCleaner.postVisitDirectory"]},{"name":"FileVisitResult visitFile(Path file, BasicFileAttributes attrs)","description":"io.spine.tools.compiler.DirectoryCleaner.visitFile","location":"model-compiler/io.spine.tools.compiler/-directory-cleaner/visit-file.html","searchKeys":["visitFile","FileVisitResult visitFile(Path file, BasicFileAttributes attrs)","io.spine.tools.compiler.DirectoryCleaner.visitFile"]},{"name":"FileVisitResult visitFileFailed(Path file, IOException exc)","description":"io.spine.tools.compiler.DirectoryCleaner.visitFileFailed","location":"model-compiler/io.spine.tools.compiler/-directory-cleaner/visit-file-failed.html","searchKeys":["visitFileFailed","FileVisitResult visitFileFailed(Path file, IOException exc)","io.spine.tools.compiler.DirectoryCleaner.visitFileFailed"]},{"name":"File getMainDescriptorSet(Project project)","description":"io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.getMainDescriptorSet","location":"model-compiler/io.spine.tools.gradle.compiler/-java-protoc-configuration-plugin/get-main-descriptor-set.html","searchKeys":["getMainDescriptorSet","File getMainDescriptorSet(Project project)","io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.getMainDescriptorSet"]},{"name":"File getTestDescriptorSet(Project project)","description":"io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.getTestDescriptorSet","location":"model-compiler/io.spine.tools.gradle.compiler/-java-protoc-configuration-plugin/get-test-descriptor-set.html","searchKeys":["getTestDescriptorSet","File getTestDescriptorSet(Project project)","io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.getTestDescriptorSet"]},{"name":"ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","description":"io.spine.tools.compiler.field.type.MapFieldType.generatedAccessorTemplates","location":"model-compiler/io.spine.tools.compiler.field.type/-map-field-type/generated-accessor-templates.html","searchKeys":["generatedAccessorTemplates","ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","io.spine.tools.compiler.field.type.MapFieldType.generatedAccessorTemplates"]},{"name":"ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","description":"io.spine.tools.compiler.field.type.RepeatedFieldType.generatedAccessorTemplates","location":"model-compiler/io.spine.tools.compiler.field.type/-repeated-field-type/generated-accessor-templates.html","searchKeys":["generatedAccessorTemplates","ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","io.spine.tools.compiler.field.type.RepeatedFieldType.generatedAccessorTemplates"]},{"name":"ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","description":"io.spine.tools.compiler.field.type.SingularFieldType.generatedAccessorTemplates","location":"model-compiler/io.spine.tools.compiler.field.type/-singular-field-type/generated-accessor-templates.html","searchKeys":["generatedAccessorTemplates","ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","io.spine.tools.compiler.field.type.SingularFieldType.generatedAccessorTemplates"]},{"name":"ImmutableSet<String> names()","description":"io.spine.tools.compiler.field.GeneratedAccessors.names","location":"model-compiler/io.spine.tools.compiler.field/-generated-accessors/names.html","searchKeys":["names","ImmutableSet<String> names()","io.spine.tools.compiler.field.GeneratedAccessors.names"]},{"name":"ModuleAnnotator.Builder add(ModuleAnnotator.Job job)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.add","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-builder/add.html","searchKeys":["add","ModuleAnnotator.Builder add(ModuleAnnotator.Job job)","io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.add"]},{"name":"ModuleAnnotator.Builder setAnnotatorFactory(AnnotatorFactory annotatorFactory)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setAnnotatorFactory","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-builder/set-annotator-factory.html","searchKeys":["setAnnotatorFactory","ModuleAnnotator.Builder setAnnotatorFactory(AnnotatorFactory annotatorFactory)","io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setAnnotatorFactory"]},{"name":"ModuleAnnotator.Builder setInternalAnnotation(ClassName internalAnnotation)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setInternalAnnotation","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-builder/set-internal-annotation.html","searchKeys":["setInternalAnnotation","ModuleAnnotator.Builder setInternalAnnotation(ClassName internalAnnotation)","io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setInternalAnnotation"]},{"name":"ModuleAnnotator.Builder setInternalMethodNames(ImmutableSet<String> methodNames)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setInternalMethodNames","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-builder/set-internal-method-names.html","searchKeys":["setInternalMethodNames","ModuleAnnotator.Builder setInternalMethodNames(ImmutableSet<String> methodNames)","io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setInternalMethodNames"]},{"name":"ModuleAnnotator.Builder setInternalPatterns(ImmutableSet<String> patterns)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setInternalPatterns","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-builder/set-internal-patterns.html","searchKeys":["setInternalPatterns","ModuleAnnotator.Builder setInternalPatterns(ImmutableSet<String> patterns)","io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.setInternalPatterns"]},{"name":"ModuleAnnotator.Job as(ClassName annotation)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.JobBuilder.as","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-job-builder/as.html","searchKeys":["as","ModuleAnnotator.Job as(ClassName annotation)","io.spine.tools.compiler.annotation.ModuleAnnotator.JobBuilder.as"]},{"name":"ModuleAnnotator build()","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.build","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-builder/build.html","searchKeys":["build","ModuleAnnotator build()","io.spine.tools.compiler.annotation.ModuleAnnotator.Builder.build"]},{"name":"OFF","description":"io.spine.tools.gradle.compiler.Severity.OFF","location":"model-compiler/io.spine.tools.gradle.compiler/-severity/-o-f-f/index.html","searchKeys":["OFF","OFF","io.spine.tools.gradle.compiler.Severity.OFF"]},{"name":"PackageName packageName()","description":"io.spine.tools.compiler.gen.column.EntityWithColumnsSpec.packageName","location":"model-compiler/io.spine.tools.compiler.gen.column/-entity-with-columns-spec/package-name.html","searchKeys":["packageName","PackageName packageName()","io.spine.tools.compiler.gen.column.EntityWithColumnsSpec.packageName"]},{"name":"PackageName packageName()","description":"io.spine.tools.compiler.gen.rejection.RejectionSpec.packageName","location":"model-compiler/io.spine.tools.compiler.gen.rejection/-rejection-spec/package-name.html","searchKeys":["packageName","PackageName packageName()","io.spine.tools.compiler.gen.rejection.RejectionSpec.packageName"]},{"name":"Path generatedFilesBaseDir(Project project)","description":"io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.generatedFilesBaseDir","location":"model-compiler/io.spine.tools.gradle.compiler/-java-protoc-configuration-plugin/generated-files-base-dir.html","searchKeys":["generatedFilesBaseDir","Path generatedFilesBaseDir(Project project)","io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.generatedFilesBaseDir"]},{"name":"String format(FieldName field)","description":"io.spine.tools.compiler.field.AccessorTemplate.format","location":"model-compiler/io.spine.tools.compiler.field/-accessor-template/format.html","searchKeys":["format","String format(FieldName field)","io.spine.tools.compiler.field.AccessorTemplate.format"]},{"name":"String name()","description":"io.spine.tools.compiler.gen.NoArgMethod.name","location":"model-compiler/io.spine.tools.compiler.gen/-no-arg-method/name.html","searchKeys":["name","String name()","io.spine.tools.compiler.gen.NoArgMethod.name"]},{"name":"String signature()","description":"io.spine.tools.compiler.gen.NoArgMethod.signature","location":"model-compiler/io.spine.tools.compiler.gen/-no-arg-method/signature.html","searchKeys":["signature","String signature()","io.spine.tools.compiler.gen.NoArgMethod.signature"]},{"name":"String toString()","description":"io.spine.tools.compiler.annotation.ApiOption.toString","location":"model-compiler/io.spine.tools.compiler.annotation/-api-option/to-string.html","searchKeys":["toString","String toString()","io.spine.tools.compiler.annotation.ApiOption.toString"]},{"name":"String toString()","description":"io.spine.tools.compiler.annotation.ClassNamePattern.toString","location":"model-compiler/io.spine.tools.compiler.annotation/-class-name-pattern/to-string.html","searchKeys":["toString","String toString()","io.spine.tools.compiler.annotation.ClassNamePattern.toString"]},{"name":"String toString()","description":"io.spine.tools.compiler.annotation.MethodPattern.toString","location":"model-compiler/io.spine.tools.compiler.annotation/-method-pattern/to-string.html","searchKeys":["toString","String toString()","io.spine.tools.compiler.annotation.MethodPattern.toString"]},{"name":"String toString()","description":"io.spine.tools.compiler.field.AccessorTemplate.toString","location":"model-compiler/io.spine.tools.compiler.field/-accessor-template/to-string.html","searchKeys":["toString","String toString()","io.spine.tools.compiler.field.AccessorTemplate.toString"]},{"name":"String toString()","description":"io.spine.tools.compiler.field.type.MapFieldType.toString","location":"model-compiler/io.spine.tools.compiler.field.type/-map-field-type/to-string.html","searchKeys":["toString","String toString()","io.spine.tools.compiler.field.type.MapFieldType.toString"]},{"name":"String toString()","description":"io.spine.tools.compiler.field.type.RepeatedFieldType.toString","location":"model-compiler/io.spine.tools.compiler.field.type/-repeated-field-type/to-string.html","searchKeys":["toString","String toString()","io.spine.tools.compiler.field.type.RepeatedFieldType.toString"]},{"name":"Supplier<File> mainDescriptorFile(Project project)","description":"io.spine.tools.gradle.compiler.ColumnGenPlugin.mainDescriptorFile","location":"model-compiler/io.spine.tools.gradle.compiler/-column-gen-plugin/main-descriptor-file.html","searchKeys":["mainDescriptorFile","Supplier<File> mainDescriptorFile(Project project)","io.spine.tools.gradle.compiler.ColumnGenPlugin.mainDescriptorFile"]},{"name":"Supplier<File> mainDescriptorFile(Project project)","description":"io.spine.tools.gradle.compiler.RejectionGenPlugin.mainDescriptorFile","location":"model-compiler/io.spine.tools.gradle.compiler/-rejection-gen-plugin/main-descriptor-file.html","searchKeys":["mainDescriptorFile","Supplier<File> mainDescriptorFile(Project project)","io.spine.tools.gradle.compiler.RejectionGenPlugin.mainDescriptorFile"]},{"name":"Supplier<File> testDescriptorFile(Project project)","description":"io.spine.tools.gradle.compiler.ColumnGenPlugin.testDescriptorFile","location":"model-compiler/io.spine.tools.gradle.compiler/-column-gen-plugin/test-descriptor-file.html","searchKeys":["testDescriptorFile","Supplier<File> testDescriptorFile(Project project)","io.spine.tools.gradle.compiler.ColumnGenPlugin.testDescriptorFile"]},{"name":"Supplier<File> testDescriptorFile(Project project)","description":"io.spine.tools.gradle.compiler.RejectionGenPlugin.testDescriptorFile","location":"model-compiler/io.spine.tools.gradle.compiler/-rejection-gen-plugin/test-descriptor-file.html","searchKeys":["testDescriptorFile","Supplier<File> testDescriptorFile(Project project)","io.spine.tools.gradle.compiler.RejectionGenPlugin.testDescriptorFile"]},{"name":"TypeName getTypeName()","description":"io.spine.tools.compiler.field.type.MapFieldType.getTypeName","location":"model-compiler/io.spine.tools.compiler.field.type/-map-field-type/get-type-name.html","searchKeys":["getTypeName","TypeName getTypeName()","io.spine.tools.compiler.field.type.MapFieldType.getTypeName"]},{"name":"TypeName getTypeName()","description":"io.spine.tools.compiler.field.type.RepeatedFieldType.getTypeName","location":"model-compiler/io.spine.tools.compiler.field.type/-repeated-field-type/get-type-name.html","searchKeys":["getTypeName","TypeName getTypeName()","io.spine.tools.compiler.field.type.RepeatedFieldType.getTypeName"]},{"name":"TypeName getTypeName()","description":"io.spine.tools.compiler.field.type.SingularFieldType.getTypeName","location":"model-compiler/io.spine.tools.compiler.field.type/-singular-field-type/get-type-name.html","searchKeys":["getTypeName","TypeName getTypeName()","io.spine.tools.compiler.field.type.SingularFieldType.getTypeName"]},{"name":"TypeSpec typeSpec()","description":"io.spine.tools.compiler.gen.column.EntityWithColumnsSpec.typeSpec","location":"model-compiler/io.spine.tools.compiler.gen.column/-entity-with-columns-spec/type-spec.html","searchKeys":["typeSpec","TypeSpec typeSpec()","io.spine.tools.compiler.gen.column.EntityWithColumnsSpec.typeSpec"]},{"name":"TypeSpec typeSpec()","description":"io.spine.tools.compiler.gen.rejection.RejectionSpec.typeSpec","location":"model-compiler/io.spine.tools.compiler.gen.rejection/-rejection-spec/type-spec.html","searchKeys":["typeSpec","TypeSpec typeSpec()","io.spine.tools.compiler.gen.rejection.RejectionSpec.typeSpec"]},{"name":"WARN","description":"io.spine.tools.gradle.compiler.Severity.WARN","location":"model-compiler/io.spine.tools.gradle.compiler/-severity/-w-a-r-n/index.html","searchKeys":["WARN","WARN","io.spine.tools.gradle.compiler.Severity.WARN"]},{"name":"abstract AccessorTemplate primarySetterTemplate()","description":"io.spine.tools.compiler.field.type.FieldType.primarySetterTemplate","location":"model-compiler/io.spine.tools.compiler.field.type/-field-type/primary-setter-template.html","searchKeys":["primarySetterTemplate","abstract AccessorTemplate primarySetterTemplate()","io.spine.tools.compiler.field.type.FieldType.primarySetterTemplate"]},{"name":"abstract Annotator createFieldAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.AnnotatorFactory.createFieldAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator-factory/create-field-annotator.html","searchKeys":["createFieldAnnotator","abstract Annotator createFieldAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.AnnotatorFactory.createFieldAnnotator"]},{"name":"abstract Annotator createFileAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.AnnotatorFactory.createFileAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator-factory/create-file-annotator.html","searchKeys":["createFileAnnotator","abstract Annotator createFileAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.AnnotatorFactory.createFileAnnotator"]},{"name":"abstract Annotator createMessageAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.AnnotatorFactory.createMessageAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator-factory/create-message-annotator.html","searchKeys":["createMessageAnnotator","abstract Annotator createMessageAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.AnnotatorFactory.createMessageAnnotator"]},{"name":"abstract Annotator createMethodAnnotator(ClassName annotation, ImmutableSet<MethodPattern> patterns)","description":"io.spine.tools.compiler.annotation.AnnotatorFactory.createMethodAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator-factory/create-method-annotator.html","searchKeys":["createMethodAnnotator","abstract Annotator createMethodAnnotator(ClassName annotation, ImmutableSet<MethodPattern> patterns)","io.spine.tools.compiler.annotation.AnnotatorFactory.createMethodAnnotator"]},{"name":"abstract Annotator createPatternAnnotator(ClassName annotation, ClassNamePattern pattern)","description":"io.spine.tools.compiler.annotation.AnnotatorFactory.createPatternAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator-factory/create-pattern-annotator.html","searchKeys":["createPatternAnnotator","abstract Annotator createPatternAnnotator(ClassName annotation, ClassNamePattern pattern)","io.spine.tools.compiler.annotation.AnnotatorFactory.createPatternAnnotator"]},{"name":"abstract Annotator createServiceAnnotator(ClassName annotation, ApiOption option)","description":"io.spine.tools.compiler.annotation.AnnotatorFactory.createServiceAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator-factory/create-service-annotator.html","searchKeys":["createServiceAnnotator","abstract Annotator createServiceAnnotator(ClassName annotation, ApiOption option)","io.spine.tools.compiler.annotation.AnnotatorFactory.createServiceAnnotator"]},{"name":"abstract ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","description":"io.spine.tools.compiler.field.type.FieldType.generatedAccessorTemplates","location":"model-compiler/io.spine.tools.compiler.field.type/-field-type/generated-accessor-templates.html","searchKeys":["generatedAccessorTemplates","abstract ImmutableSet<AccessorTemplate> generatedAccessorTemplates()","io.spine.tools.compiler.field.type.FieldType.generatedAccessorTemplates"]},{"name":"abstract TypeName getTypeName()","description":"io.spine.tools.compiler.field.type.FieldType.getTypeName","location":"model-compiler/io.spine.tools.compiler.field.type/-field-type/get-type-name.html","searchKeys":["getTypeName","abstract TypeName getTypeName()","io.spine.tools.compiler.field.type.FieldType.getTypeName"]},{"name":"abstract boolean shouldAnnotate(D descriptor)","description":"io.spine.tools.compiler.annotation.OptionAnnotator.shouldAnnotate","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/should-annotate.html","searchKeys":["shouldAnnotate","abstract boolean shouldAnnotate(D descriptor)","io.spine.tools.compiler.annotation.OptionAnnotator.shouldAnnotate"]},{"name":"abstract void annotate()","description":"io.spine.tools.compiler.annotation.Annotator.annotate","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/annotate.html","searchKeys":["annotate","abstract void annotate()","io.spine.tools.compiler.annotation.Annotator.annotate"]},{"name":"abstract void annotateMultipleFiles(FileDescriptor fileDescriptor)","description":"io.spine.tools.compiler.annotation.OptionAnnotator.annotateMultipleFiles","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/annotate-multiple-files.html","searchKeys":["annotateMultipleFiles","abstract void annotateMultipleFiles(FileDescriptor fileDescriptor)","io.spine.tools.compiler.annotation.OptionAnnotator.annotateMultipleFiles"]},{"name":"abstract void annotateOneFile(FileDescriptor fileDescriptor)","description":"io.spine.tools.compiler.annotation.OptionAnnotator.annotateOneFile","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/annotate-one-file.html","searchKeys":["annotateOneFile","abstract void annotateOneFile(FileDescriptor fileDescriptor)","io.spine.tools.compiler.annotation.OptionAnnotator.annotateOneFile"]},{"name":"abstract void execute(AnnotatorFactory factory)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Job.execute","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-job/execute.html","searchKeys":["execute","abstract void execute(AnnotatorFactory factory)","io.spine.tools.compiler.annotation.ModuleAnnotator.Job.execute"]},{"name":"boolean addErrorProneChecksDependency()","description":"io.spine.tools.compiler.check.DependencyConfigurer.addErrorProneChecksDependency","location":"model-compiler/io.spine.tools.compiler.check/-dependency-configurer/add-error-prone-checks-dependency.html","searchKeys":["addErrorProneChecksDependency","boolean addErrorProneChecksDependency()","io.spine.tools.compiler.check.DependencyConfigurer.addErrorProneChecksDependency"]},{"name":"boolean equals(Object o)","description":"io.spine.tools.compiler.annotation.ClassNamePattern.equals","location":"model-compiler/io.spine.tools.compiler.annotation/-class-name-pattern/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.tools.compiler.annotation.ClassNamePattern.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.tools.compiler.annotation.MethodPattern.equals","location":"model-compiler/io.spine.tools.compiler.annotation/-method-pattern/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.tools.compiler.annotation.MethodPattern.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.tools.compiler.field.AccessorTemplate.equals","location":"model-compiler/io.spine.tools.compiler.field/-accessor-template/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.tools.compiler.field.AccessorTemplate.equals"]},{"name":"final ApiOption option()","description":"io.spine.tools.compiler.annotation.OptionAnnotator.option","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/option.html","searchKeys":["option","final ApiOption option()","io.spine.tools.compiler.annotation.OptionAnnotator.option"]},{"name":"final ImmutableList<FileDescriptor> descriptors()","description":"io.spine.tools.compiler.annotation.Annotator.descriptors","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/descriptors.html","searchKeys":["descriptors","final ImmutableList<FileDescriptor> descriptors()","io.spine.tools.compiler.annotation.Annotator.descriptors"]},{"name":"final void addAnnotation(AnnotationTargetSource<?, ?> source)","description":"io.spine.tools.compiler.annotation.Annotator.addAnnotation","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/add-annotation.html","searchKeys":["addAnnotation","final void addAnnotation(AnnotationTargetSource<?, ?> source)","io.spine.tools.compiler.annotation.Annotator.addAnnotation"]},{"name":"final void annotate(FileDescriptor fileDescriptor)","description":"io.spine.tools.compiler.annotation.OptionAnnotator.annotate","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/annotate.html","searchKeys":["annotate","final void annotate(FileDescriptor fileDescriptor)","io.spine.tools.compiler.annotation.OptionAnnotator.annotate"]},{"name":"final void annotate(SourceFile relativeSourcePath)","description":"io.spine.tools.compiler.annotation.Annotator.annotate","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/annotate.html","searchKeys":["annotate","final void annotate(SourceFile relativeSourcePath)","io.spine.tools.compiler.annotation.Annotator.annotate"]},{"name":"final void annotateMessageTypes(Descriptor type, FileDescriptor file)","description":"io.spine.tools.compiler.annotation.OptionAnnotator.annotateMessageTypes","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/annotate-message-types.html","searchKeys":["annotateMessageTypes","final void annotateMessageTypes(Descriptor type, FileDescriptor file)","io.spine.tools.compiler.annotation.OptionAnnotator.annotateMessageTypes"]},{"name":"int hashCode()","description":"io.spine.tools.compiler.annotation.ClassNamePattern.hashCode","location":"model-compiler/io.spine.tools.compiler.annotation/-class-name-pattern/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.tools.compiler.annotation.ClassNamePattern.hashCode"]},{"name":"int hashCode()","description":"io.spine.tools.compiler.annotation.MethodPattern.hashCode","location":"model-compiler/io.spine.tools.compiler.annotation/-method-pattern/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.tools.compiler.annotation.MethodPattern.hashCode"]},{"name":"int hashCode()","description":"io.spine.tools.compiler.field.AccessorTemplate.hashCode","location":"model-compiler/io.spine.tools.compiler.field/-accessor-template/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.tools.compiler.field.AccessorTemplate.hashCode"]},{"name":"protected class TypeDeclarationAnnotation implements SourceVisitor<T>","description":"io.spine.tools.compiler.annotation.Annotator.TypeDeclarationAnnotation","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/-type-declaration-annotation/index.html","searchKeys":["TypeDeclarationAnnotation","protected class TypeDeclarationAnnotation implements SourceVisitor<T>","io.spine.tools.compiler.annotation.Annotator.TypeDeclarationAnnotation"]},{"name":"public abstract class Annotator","description":"io.spine.tools.compiler.annotation.Annotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/index.html","searchKeys":["Annotator","public abstract class Annotator","io.spine.tools.compiler.annotation.Annotator"]},{"name":"public abstract class OptionAnnotator<D extends GenericDescriptor> extends Annotator","description":"io.spine.tools.compiler.annotation.OptionAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/index.html","searchKeys":["OptionAnnotator","public abstract class OptionAnnotator<D extends GenericDescriptor> extends Annotator","io.spine.tools.compiler.annotation.OptionAnnotator"]},{"name":"public class CleaningPlugin","description":"io.spine.tools.gradle.compiler.CleaningPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-cleaning-plugin/index.html","searchKeys":["CleaningPlugin","public class CleaningPlugin","io.spine.tools.gradle.compiler.CleaningPlugin"]},{"name":"public class CodeGenAnnotations","description":"io.spine.tools.gradle.compiler.CodeGenAnnotations","location":"model-compiler/io.spine.tools.gradle.compiler/-code-gen-annotations/index.html","searchKeys":["CodeGenAnnotations","public class CodeGenAnnotations","io.spine.tools.gradle.compiler.CodeGenAnnotations"]},{"name":"public class ColumnGenPlugin","description":"io.spine.tools.gradle.compiler.ColumnGenPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-column-gen-plugin/index.html","searchKeys":["ColumnGenPlugin","public class ColumnGenPlugin","io.spine.tools.gradle.compiler.ColumnGenPlugin"]},{"name":"public class DescriptorSetMergerPlugin","description":"io.spine.tools.gradle.compiler.DescriptorSetMergerPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-descriptor-set-merger-plugin/index.html","searchKeys":["DescriptorSetMergerPlugin","public class DescriptorSetMergerPlugin","io.spine.tools.gradle.compiler.DescriptorSetMergerPlugin"]},{"name":"public class ErrorProneChecksExtension","description":"io.spine.tools.gradle.compiler.ErrorProneChecksExtension","location":"model-compiler/io.spine.tools.gradle.compiler/-error-prone-checks-extension/index.html","searchKeys":["ErrorProneChecksExtension","public class ErrorProneChecksExtension","io.spine.tools.gradle.compiler.ErrorProneChecksExtension"]},{"name":"public class Extension","description":"io.spine.tools.gradle.compiler.Extension","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/index.html","searchKeys":["Extension","public class Extension","io.spine.tools.gradle.compiler.Extension"]},{"name":"public class ModelCompilerPlugin","description":"io.spine.tools.gradle.compiler.ModelCompilerPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-model-compiler-plugin/index.html","searchKeys":["ModelCompilerPlugin","public class ModelCompilerPlugin","io.spine.tools.gradle.compiler.ModelCompilerPlugin"]},{"name":"public class ProtoAnnotatorPlugin","description":"io.spine.tools.gradle.compiler.ProtoAnnotatorPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-proto-annotator-plugin/index.html","searchKeys":["ProtoAnnotatorPlugin","public class ProtoAnnotatorPlugin","io.spine.tools.gradle.compiler.ProtoAnnotatorPlugin"]},{"name":"public class RejectionGenPlugin","description":"io.spine.tools.gradle.compiler.RejectionGenPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-rejection-gen-plugin/index.html","searchKeys":["RejectionGenPlugin","public class RejectionGenPlugin","io.spine.tools.gradle.compiler.RejectionGenPlugin"]},{"name":"public enum Severity","description":"io.spine.tools.gradle.compiler.Severity","location":"model-compiler/io.spine.tools.gradle.compiler/-severity/index.html","searchKeys":["Severity","public enum Severity","io.spine.tools.gradle.compiler.Severity"]},{"name":"public final class AccessorTemplate implements Serializable","description":"io.spine.tools.compiler.field.AccessorTemplate","location":"model-compiler/io.spine.tools.compiler.field/-accessor-template/index.html","searchKeys":["AccessorTemplate","public final class AccessorTemplate implements Serializable","io.spine.tools.compiler.field.AccessorTemplate"]},{"name":"public final class AccessorTemplates","description":"io.spine.tools.compiler.field.AccessorTemplates","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/index.html","searchKeys":["AccessorTemplates","public final class AccessorTemplates","io.spine.tools.compiler.field.AccessorTemplates"]},{"name":"public final class ApiOption","description":"io.spine.tools.compiler.annotation.ApiOption","location":"model-compiler/io.spine.tools.compiler.annotation/-api-option/index.html","searchKeys":["ApiOption","public final class ApiOption","io.spine.tools.compiler.annotation.ApiOption"]},{"name":"public final class Builder","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Builder","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-builder/index.html","searchKeys":["Builder","public final class Builder","io.spine.tools.compiler.annotation.ModuleAnnotator.Builder"]},{"name":"public final class ClassNamePattern","description":"io.spine.tools.compiler.annotation.ClassNamePattern","location":"model-compiler/io.spine.tools.compiler.annotation/-class-name-pattern/index.html","searchKeys":["ClassNamePattern","public final class ClassNamePattern","io.spine.tools.compiler.annotation.ClassNamePattern"]},{"name":"public final class DefaultAnnotatorFactory implements AnnotatorFactory","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/index.html","searchKeys":["DefaultAnnotatorFactory","public final class DefaultAnnotatorFactory implements AnnotatorFactory","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory"]},{"name":"public final class DependencyConfigurer","description":"io.spine.tools.compiler.check.DependencyConfigurer","location":"model-compiler/io.spine.tools.compiler.check/-dependency-configurer/index.html","searchKeys":["DependencyConfigurer","public final class DependencyConfigurer","io.spine.tools.compiler.check.DependencyConfigurer"]},{"name":"public final class DirectoryCleaner extends SimpleFileVisitor<T>","description":"io.spine.tools.compiler.DirectoryCleaner","location":"model-compiler/io.spine.tools.compiler/-directory-cleaner/index.html","searchKeys":["DirectoryCleaner","public final class DirectoryCleaner extends SimpleFileVisitor<T>","io.spine.tools.compiler.DirectoryCleaner"]},{"name":"public final class EntityWithColumnsSpec","description":"io.spine.tools.compiler.gen.column.EntityWithColumnsSpec","location":"model-compiler/io.spine.tools.compiler.gen.column/-entity-with-columns-spec/index.html","searchKeys":["EntityWithColumnsSpec","public final class EntityWithColumnsSpec","io.spine.tools.compiler.gen.column.EntityWithColumnsSpec"]},{"name":"public final class ErrorProneChecksPlugin","description":"io.spine.tools.gradle.compiler.ErrorProneChecksPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-error-prone-checks-plugin/index.html","searchKeys":["ErrorProneChecksPlugin","public final class ErrorProneChecksPlugin","io.spine.tools.gradle.compiler.ErrorProneChecksPlugin"]},{"name":"public final class GeneratedAccessors","description":"io.spine.tools.compiler.field.GeneratedAccessors","location":"model-compiler/io.spine.tools.compiler.field/-generated-accessors/index.html","searchKeys":["GeneratedAccessors","public final class GeneratedAccessors","io.spine.tools.compiler.field.GeneratedAccessors"]},{"name":"public final class JavaProtocConfigurationPlugin","description":"io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin","location":"model-compiler/io.spine.tools.gradle.compiler/-java-protoc-configuration-plugin/index.html","searchKeys":["JavaProtocConfigurationPlugin","public final class JavaProtocConfigurationPlugin","io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin"]},{"name":"public final class JobBuilder","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.JobBuilder","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-job-builder/index.html","searchKeys":["JobBuilder","public final class JobBuilder","io.spine.tools.compiler.annotation.ModuleAnnotator.JobBuilder"]},{"name":"public final class MapFieldType implements FieldType","description":"io.spine.tools.compiler.field.type.MapFieldType","location":"model-compiler/io.spine.tools.compiler.field.type/-map-field-type/index.html","searchKeys":["MapFieldType","public final class MapFieldType implements FieldType","io.spine.tools.compiler.field.type.MapFieldType"]},{"name":"public final class MethodPattern","description":"io.spine.tools.compiler.annotation.MethodPattern","location":"model-compiler/io.spine.tools.compiler.annotation/-method-pattern/index.html","searchKeys":["MethodPattern","public final class MethodPattern","io.spine.tools.compiler.annotation.MethodPattern"]},{"name":"public final class ModuleAnnotator","description":"io.spine.tools.compiler.annotation.ModuleAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/index.html","searchKeys":["ModuleAnnotator","public final class ModuleAnnotator","io.spine.tools.compiler.annotation.ModuleAnnotator"]},{"name":"public final class NoArgMethod","description":"io.spine.tools.compiler.gen.NoArgMethod","location":"model-compiler/io.spine.tools.compiler.gen/-no-arg-method/index.html","searchKeys":["NoArgMethod","public final class NoArgMethod","io.spine.tools.compiler.gen.NoArgMethod"]},{"name":"public final class PreprocessorConfigurer","description":"io.spine.tools.compiler.check.PreprocessorConfigurer","location":"model-compiler/io.spine.tools.compiler.check/-preprocessor-configurer/index.html","searchKeys":["PreprocessorConfigurer","public final class PreprocessorConfigurer","io.spine.tools.compiler.check.PreprocessorConfigurer"]},{"name":"public final class RejectionSpec","description":"io.spine.tools.compiler.gen.rejection.RejectionSpec","location":"model-compiler/io.spine.tools.compiler.gen.rejection/-rejection-spec/index.html","searchKeys":["RejectionSpec","public final class RejectionSpec","io.spine.tools.compiler.gen.rejection.RejectionSpec"]},{"name":"public final class RepeatedFieldType implements FieldType","description":"io.spine.tools.compiler.field.type.RepeatedFieldType","location":"model-compiler/io.spine.tools.compiler.field.type/-repeated-field-type/index.html","searchKeys":["RepeatedFieldType","public final class RepeatedFieldType implements FieldType","io.spine.tools.compiler.field.type.RepeatedFieldType"]},{"name":"public final class SeverityConfigurer","description":"io.spine.tools.compiler.check.SeverityConfigurer","location":"model-compiler/io.spine.tools.compiler.check/-severity-configurer/index.html","searchKeys":["SeverityConfigurer","public final class SeverityConfigurer","io.spine.tools.compiler.check.SeverityConfigurer"]},{"name":"public final class SingularFieldType implements FieldType","description":"io.spine.tools.compiler.field.type.SingularFieldType","location":"model-compiler/io.spine.tools.compiler.field.type/-singular-field-type/index.html","searchKeys":["SingularFieldType","public final class SingularFieldType implements FieldType","io.spine.tools.compiler.field.type.SingularFieldType"]},{"name":"public interface AnnotatorFactory","description":"io.spine.tools.compiler.annotation.AnnotatorFactory","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator-factory/index.html","searchKeys":["AnnotatorFactory","public interface AnnotatorFactory","io.spine.tools.compiler.annotation.AnnotatorFactory"]},{"name":"public interface FieldType","description":"io.spine.tools.compiler.field.type.FieldType","location":"model-compiler/io.spine.tools.compiler.field.type/-field-type/index.html","searchKeys":["FieldType","public interface FieldType","io.spine.tools.compiler.field.type.FieldType"]},{"name":"public interface Job","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.Job","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/-job/index.html","searchKeys":["Job","public interface Job","io.spine.tools.compiler.annotation.ModuleAnnotator.Job"]},{"name":"static AccessorTemplate adder()","description":"io.spine.tools.compiler.field.AccessorTemplates.adder","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/adder.html","searchKeys":["adder","static AccessorTemplate adder()","io.spine.tools.compiler.field.AccessorTemplates.adder"]},{"name":"static AccessorTemplate allAdder()","description":"io.spine.tools.compiler.field.AccessorTemplates.allAdder","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/all-adder.html","searchKeys":["allAdder","static AccessorTemplate allAdder()","io.spine.tools.compiler.field.AccessorTemplates.allAdder"]},{"name":"static AccessorTemplate allPutter()","description":"io.spine.tools.compiler.field.AccessorTemplates.allPutter","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/all-putter.html","searchKeys":["allPutter","static AccessorTemplate allPutter()","io.spine.tools.compiler.field.AccessorTemplates.allPutter"]},{"name":"static AccessorTemplate clearer()","description":"io.spine.tools.compiler.field.AccessorTemplates.clearer","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/clearer.html","searchKeys":["clearer","static AccessorTemplate clearer()","io.spine.tools.compiler.field.AccessorTemplates.clearer"]},{"name":"static AccessorTemplate countGetter()","description":"io.spine.tools.compiler.field.AccessorTemplates.countGetter","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/count-getter.html","searchKeys":["countGetter","static AccessorTemplate countGetter()","io.spine.tools.compiler.field.AccessorTemplates.countGetter"]},{"name":"static AccessorTemplate getter()","description":"io.spine.tools.compiler.field.AccessorTemplates.getter","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/getter.html","searchKeys":["getter","static AccessorTemplate getter()","io.spine.tools.compiler.field.AccessorTemplates.getter"]},{"name":"static AccessorTemplate listGetter()","description":"io.spine.tools.compiler.field.AccessorTemplates.listGetter","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/list-getter.html","searchKeys":["listGetter","static AccessorTemplate listGetter()","io.spine.tools.compiler.field.AccessorTemplates.listGetter"]},{"name":"static AccessorTemplate mapGetter()","description":"io.spine.tools.compiler.field.AccessorTemplates.mapGetter","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/map-getter.html","searchKeys":["mapGetter","static AccessorTemplate mapGetter()","io.spine.tools.compiler.field.AccessorTemplates.mapGetter"]},{"name":"static AccessorTemplate prefix(String prefix)","description":"io.spine.tools.compiler.field.AccessorTemplate.prefix","location":"model-compiler/io.spine.tools.compiler.field/-accessor-template/prefix.html","searchKeys":["prefix","static AccessorTemplate prefix(String prefix)","io.spine.tools.compiler.field.AccessorTemplate.prefix"]},{"name":"static AccessorTemplate prefixAndPostfix(String prefix, String suffix)","description":"io.spine.tools.compiler.field.AccessorTemplate.prefixAndPostfix","location":"model-compiler/io.spine.tools.compiler.field/-accessor-template/prefix-and-postfix.html","searchKeys":["prefixAndPostfix","static AccessorTemplate prefixAndPostfix(String prefix, String suffix)","io.spine.tools.compiler.field.AccessorTemplate.prefixAndPostfix"]},{"name":"static AccessorTemplate putter()","description":"io.spine.tools.compiler.field.AccessorTemplates.putter","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/putter.html","searchKeys":["putter","static AccessorTemplate putter()","io.spine.tools.compiler.field.AccessorTemplates.putter"]},{"name":"static AccessorTemplate remover()","description":"io.spine.tools.compiler.field.AccessorTemplates.remover","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/remover.html","searchKeys":["remover","static AccessorTemplate remover()","io.spine.tools.compiler.field.AccessorTemplates.remover"]},{"name":"static AccessorTemplate setter()","description":"io.spine.tools.compiler.field.AccessorTemplates.setter","location":"model-compiler/io.spine.tools.compiler.field/-accessor-templates/setter.html","searchKeys":["setter","static AccessorTemplate setter()","io.spine.tools.compiler.field.AccessorTemplates.setter"]},{"name":"static AnnotatorFactory newInstance(File descriptorSetFile, Path generatedProtoDir, Path generatedGrpcDir)","description":"io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.newInstance","location":"model-compiler/io.spine.tools.compiler.annotation/-default-annotator-factory/new-instance.html","searchKeys":["newInstance","static AnnotatorFactory newInstance(File descriptorSetFile, Path generatedProtoDir, Path generatedGrpcDir)","io.spine.tools.compiler.annotation.DefaultAnnotatorFactory.newInstance"]},{"name":"static ApiOption beta()","description":"io.spine.tools.compiler.annotation.ApiOption.beta","location":"model-compiler/io.spine.tools.compiler.annotation/-api-option/beta.html","searchKeys":["beta","static ApiOption beta()","io.spine.tools.compiler.annotation.ApiOption.beta"]},{"name":"static ApiOption experimental()","description":"io.spine.tools.compiler.annotation.ApiOption.experimental","location":"model-compiler/io.spine.tools.compiler.annotation/-api-option/experimental.html","searchKeys":["experimental","static ApiOption experimental()","io.spine.tools.compiler.annotation.ApiOption.experimental"]},{"name":"static ApiOption internal()","description":"io.spine.tools.compiler.annotation.ApiOption.internal","location":"model-compiler/io.spine.tools.compiler.annotation/-api-option/internal.html","searchKeys":["internal","static ApiOption internal()","io.spine.tools.compiler.annotation.ApiOption.internal"]},{"name":"static ApiOption spi()","description":"io.spine.tools.compiler.annotation.ApiOption.spi","location":"model-compiler/io.spine.tools.compiler.annotation/-api-option/spi.html","searchKeys":["spi","static ApiOption spi()","io.spine.tools.compiler.annotation.ApiOption.spi"]},{"name":"static Array<Severity> values()","description":"io.spine.tools.gradle.compiler.Severity.values","location":"model-compiler/io.spine.tools.gradle.compiler/-severity/values.html","searchKeys":["values","static Array<Severity> values()","io.spine.tools.gradle.compiler.Severity.values"]},{"name":"static CodeGenAnnotations getCodeGenAnnotations(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getCodeGenAnnotations","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-code-gen-annotations.html","searchKeys":["getCodeGenAnnotations","static CodeGenAnnotations getCodeGenAnnotations(Project project)","io.spine.tools.gradle.compiler.Extension.getCodeGenAnnotations"]},{"name":"static DependencyConfigurer createFor(Configuration configuration)","description":"io.spine.tools.compiler.check.DependencyConfigurer.createFor","location":"model-compiler/io.spine.tools.compiler.check/-dependency-configurer/create-for.html","searchKeys":["createFor","static DependencyConfigurer createFor(Configuration configuration)","io.spine.tools.compiler.check.DependencyConfigurer.createFor"]},{"name":"static FieldType of(FieldDeclaration field)","description":"io.spine.tools.compiler.field.type.FieldType.of","location":"model-compiler/io.spine.tools.compiler.field.type/-field-type/of.html","searchKeys":["of","static FieldType of(FieldDeclaration field)","io.spine.tools.compiler.field.type.FieldType.of"]},{"name":"static File getMainDescriptorSet(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getMainDescriptorSet","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-main-descriptor-set.html","searchKeys":["getMainDescriptorSet","static File getMainDescriptorSet(Project project)","io.spine.tools.gradle.compiler.Extension.getMainDescriptorSet"]},{"name":"static File getTestDescriptorSet(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTestDescriptorSet","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-test-descriptor-set.html","searchKeys":["getTestDescriptorSet","static File getTestDescriptorSet(Project project)","io.spine.tools.gradle.compiler.Extension.getTestDescriptorSet"]},{"name":"static GeneratedAccessors forField(FieldName name, FieldType type)","description":"io.spine.tools.compiler.field.GeneratedAccessors.forField","location":"model-compiler/io.spine.tools.compiler.field/-generated-accessors/for-field.html","searchKeys":["forField","static GeneratedAccessors forField(FieldName name, FieldType type)","io.spine.tools.compiler.field.GeneratedAccessors.forField"]},{"name":"static GeneratedColumns getColumns(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getColumns","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-columns.html","searchKeys":["getColumns","static GeneratedColumns getColumns(Project project)","io.spine.tools.gradle.compiler.Extension.getColumns"]},{"name":"static GeneratedFields getFields(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getFields","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-fields.html","searchKeys":["getFields","static GeneratedFields getFields(Project project)","io.spine.tools.gradle.compiler.Extension.getFields"]},{"name":"static GeneratedInterfaces getInterfaces(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getInterfaces","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-interfaces.html","searchKeys":["getInterfaces","static GeneratedInterfaces getInterfaces(Project project)","io.spine.tools.gradle.compiler.Extension.getInterfaces"]},{"name":"static GeneratedMethods getMethods(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getMethods","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-methods.html","searchKeys":["getMethods","static GeneratedMethods getMethods(Project project)","io.spine.tools.gradle.compiler.Extension.getMethods"]},{"name":"static GeneratedNestedClasses getNestedClasses(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getNestedClasses","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-nested-classes.html","searchKeys":["getNestedClasses","static GeneratedNestedClasses getNestedClasses(Project project)","io.spine.tools.gradle.compiler.Extension.getNestedClasses"]},{"name":"static ImmutableSet<String> getInternalClassPatterns(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getInternalClassPatterns","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-internal-class-patterns.html","searchKeys":["getInternalClassPatterns","static ImmutableSet<String> getInternalClassPatterns(Project project)","io.spine.tools.gradle.compiler.Extension.getInternalClassPatterns"]},{"name":"static ImmutableSet<String> getInternalMethodNames(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getInternalMethodNames","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-internal-method-names.html","searchKeys":["getInternalMethodNames","static ImmutableSet<String> getInternalMethodNames(Project project)","io.spine.tools.gradle.compiler.Extension.getInternalMethodNames"]},{"name":"static Indent getIndent(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getIndent","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-indent.html","searchKeys":["getIndent","static Indent getIndent(Project project)","io.spine.tools.gradle.compiler.Extension.getIndent"]},{"name":"static List<String> getDirsToClean(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getDirsToClean","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-dirs-to-clean.html","searchKeys":["getDirsToClean","static List<String> getDirsToClean(Project project)","io.spine.tools.gradle.compiler.Extension.getDirsToClean"]},{"name":"static ModuleAnnotator.Builder newBuilder()","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.newBuilder","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/new-builder.html","searchKeys":["newBuilder","static ModuleAnnotator.Builder newBuilder()","io.spine.tools.compiler.annotation.ModuleAnnotator.newBuilder"]},{"name":"static ModuleAnnotator.JobBuilder translate(ApiOption option)","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.translate","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/translate.html","searchKeys":["translate","static ModuleAnnotator.JobBuilder translate(ApiOption option)","io.spine.tools.compiler.annotation.ModuleAnnotator.translate"]},{"name":"static Optional<String> spineDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.spineDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/spine-dir.html","searchKeys":["spineDir","static Optional<String> spineDir(Project project)","io.spine.tools.gradle.compiler.Extension.spineDir"]},{"name":"static PreprocessorConfigurer initFor(Project project)","description":"io.spine.tools.compiler.check.PreprocessorConfigurer.initFor","location":"model-compiler/io.spine.tools.compiler.check/-preprocessor-configurer/init-for.html","searchKeys":["initFor","static PreprocessorConfigurer initFor(Project project)","io.spine.tools.compiler.check.PreprocessorConfigurer.initFor"]},{"name":"static SeverityConfigurer initFor(Project project)","description":"io.spine.tools.compiler.check.SeverityConfigurer.initFor","location":"model-compiler/io.spine.tools.compiler.check/-severity-configurer/init-for.html","searchKeys":["initFor","static SeverityConfigurer initFor(Project project)","io.spine.tools.compiler.check.SeverityConfigurer.initFor"]},{"name":"static Severity getSpineCheckSeverity(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getSpineCheckSeverity","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-spine-check-severity.html","searchKeys":["getSpineCheckSeverity","static Severity getSpineCheckSeverity(Project project)","io.spine.tools.gradle.compiler.Extension.getSpineCheckSeverity"]},{"name":"static Severity getUseValidatingBuilder(Project project)","description":"io.spine.tools.gradle.compiler.ErrorProneChecksExtension.getUseValidatingBuilder","location":"model-compiler/io.spine.tools.gradle.compiler/-error-prone-checks-extension/get-use-validating-builder.html","searchKeys":["getUseValidatingBuilder","static Severity getUseValidatingBuilder(Project project)","io.spine.tools.gradle.compiler.ErrorProneChecksExtension.getUseValidatingBuilder"]},{"name":"static Severity valueOf(String name)","description":"io.spine.tools.gradle.compiler.Severity.valueOf","location":"model-compiler/io.spine.tools.gradle.compiler/-severity/value-of.html","searchKeys":["valueOf","static Severity valueOf(String name)","io.spine.tools.gradle.compiler.Severity.valueOf"]},{"name":"static String extensionName()","description":"io.spine.tools.gradle.compiler.ErrorProneChecksPlugin.extensionName","location":"model-compiler/io.spine.tools.gradle.compiler/-error-prone-checks-plugin/extension-name.html","searchKeys":["extensionName","static String extensionName()","io.spine.tools.gradle.compiler.ErrorProneChecksPlugin.extensionName"]},{"name":"static String extensionName()","description":"io.spine.tools.gradle.compiler.ModelCompilerPlugin.extensionName","location":"model-compiler/io.spine.tools.gradle.compiler/-model-compiler-plugin/extension-name.html","searchKeys":["extensionName","static String extensionName()","io.spine.tools.gradle.compiler.ModelCompilerPlugin.extensionName"]},{"name":"static String getMainGenGrpcDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getMainGenGrpcDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-main-gen-grpc-dir.html","searchKeys":["getMainGenGrpcDir","static String getMainGenGrpcDir(Project project)","io.spine.tools.gradle.compiler.Extension.getMainGenGrpcDir"]},{"name":"static String getMainGenProtoDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getMainGenProtoDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-main-gen-proto-dir.html","searchKeys":["getMainGenProtoDir","static String getMainGenProtoDir(Project project)","io.spine.tools.gradle.compiler.Extension.getMainGenProtoDir"]},{"name":"static String getMainProtoSrcDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getMainProtoSrcDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-main-proto-src-dir.html","searchKeys":["getMainProtoSrcDir","static String getMainProtoSrcDir(Project project)","io.spine.tools.gradle.compiler.Extension.getMainProtoSrcDir"]},{"name":"static String getMainTargetGenResourcesDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getMainTargetGenResourcesDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-main-target-gen-resources-dir.html","searchKeys":["getMainTargetGenResourcesDir","static String getMainTargetGenResourcesDir(Project project)","io.spine.tools.gradle.compiler.Extension.getMainTargetGenResourcesDir"]},{"name":"static String getTargetGenColumnsRootDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTargetGenColumnsRootDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-target-gen-columns-root-dir.html","searchKeys":["getTargetGenColumnsRootDir","static String getTargetGenColumnsRootDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTargetGenColumnsRootDir"]},{"name":"static String getTargetGenRejectionsRootDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTargetGenRejectionsRootDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-target-gen-rejections-root-dir.html","searchKeys":["getTargetGenRejectionsRootDir","static String getTargetGenRejectionsRootDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTargetGenRejectionsRootDir"]},{"name":"static String getTargetTestGenColumnsRootDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTargetTestGenColumnsRootDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-target-test-gen-columns-root-dir.html","searchKeys":["getTargetTestGenColumnsRootDir","static String getTargetTestGenColumnsRootDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTargetTestGenColumnsRootDir"]},{"name":"static String getTargetTestGenRejectionsRootDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTargetTestGenRejectionsRootDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-target-test-gen-rejections-root-dir.html","searchKeys":["getTargetTestGenRejectionsRootDir","static String getTargetTestGenRejectionsRootDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTargetTestGenRejectionsRootDir"]},{"name":"static String getTestGenGrpcDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTestGenGrpcDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-test-gen-grpc-dir.html","searchKeys":["getTestGenGrpcDir","static String getTestGenGrpcDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTestGenGrpcDir"]},{"name":"static String getTestGenProtoDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTestGenProtoDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-test-gen-proto-dir.html","searchKeys":["getTestGenProtoDir","static String getTestGenProtoDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTestGenProtoDir"]},{"name":"static String getTestProtoSrcDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTestProtoSrcDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-test-proto-src-dir.html","searchKeys":["getTestProtoSrcDir","static String getTestProtoSrcDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTestProtoSrcDir"]},{"name":"static String getTestTargetGenResourcesDir(Project project)","description":"io.spine.tools.gradle.compiler.Extension.getTestTargetGenResourcesDir","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/get-test-target-gen-resources-dir.html","searchKeys":["getTestTargetGenResourcesDir","static String getTestTargetGenResourcesDir(Project project)","io.spine.tools.gradle.compiler.Extension.getTestTargetGenResourcesDir"]},{"name":"static boolean shouldGenerateValidatingBuilders(Project project)","description":"io.spine.tools.gradle.compiler.Extension.shouldGenerateValidatingBuilders","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/should-generate-validating-builders.html","searchKeys":["shouldGenerateValidatingBuilders","static boolean shouldGenerateValidatingBuilders(Project project)","io.spine.tools.gradle.compiler.Extension.shouldGenerateValidatingBuilders"]},{"name":"static boolean shouldGenerateValidation(Project project)","description":"io.spine.tools.gradle.compiler.Extension.shouldGenerateValidation","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/should-generate-validation.html","searchKeys":["shouldGenerateValidation","static boolean shouldGenerateValidation(Project project)","io.spine.tools.gradle.compiler.Extension.shouldGenerateValidation"]},{"name":"static void deleteDirs(List<String> dirs)","description":"io.spine.tools.compiler.DirectoryCleaner.deleteDirs","location":"model-compiler/io.spine.tools.compiler/-directory-cleaner/delete-dirs.html","searchKeys":["deleteDirs","static void deleteDirs(List<String> dirs)","io.spine.tools.compiler.DirectoryCleaner.deleteDirs"]},{"name":"void Annotator(ClassName annotation, ImmutableList<FileDescriptor> descriptors, Path genProtoDir)","description":"io.spine.tools.compiler.annotation.Annotator.Annotator","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/-annotator.html","searchKeys":["Annotator","void Annotator(ClassName annotation, ImmutableList<FileDescriptor> descriptors, Path genProtoDir)","io.spine.tools.compiler.annotation.Annotator.Annotator"]},{"name":"void EntityWithColumnsSpec(MessageType messageType)","description":"io.spine.tools.compiler.gen.column.EntityWithColumnsSpec.EntityWithColumnsSpec","location":"model-compiler/io.spine.tools.compiler.gen.column/-entity-with-columns-spec/-entity-with-columns-spec.html","searchKeys":["EntityWithColumnsSpec","void EntityWithColumnsSpec(MessageType messageType)","io.spine.tools.compiler.gen.column.EntityWithColumnsSpec.EntityWithColumnsSpec"]},{"name":"void NoArgMethod(String methodName)","description":"io.spine.tools.compiler.gen.NoArgMethod.NoArgMethod","location":"model-compiler/io.spine.tools.compiler.gen/-no-arg-method/-no-arg-method.html","searchKeys":["NoArgMethod","void NoArgMethod(String methodName)","io.spine.tools.compiler.gen.NoArgMethod.NoArgMethod"]},{"name":"void OptionAnnotator(ClassName annotation, ApiOption option, ImmutableList<FileDescriptor> fileDescriptors, Path genProtoDir)","description":"io.spine.tools.compiler.annotation.OptionAnnotator.OptionAnnotator","location":"model-compiler/io.spine.tools.compiler.annotation/-option-annotator/-option-annotator.html","searchKeys":["OptionAnnotator","void OptionAnnotator(ClassName annotation, ApiOption option, ImmutableList<FileDescriptor> fileDescriptors, Path genProtoDir)","io.spine.tools.compiler.annotation.OptionAnnotator.OptionAnnotator"]},{"name":"void RejectionSpec(RejectionType rejectionType)","description":"io.spine.tools.compiler.gen.rejection.RejectionSpec.RejectionSpec","location":"model-compiler/io.spine.tools.compiler.gen.rejection/-rejection-spec/-rejection-spec.html","searchKeys":["RejectionSpec","void RejectionSpec(RejectionType rejectionType)","io.spine.tools.compiler.gen.rejection.RejectionSpec.RejectionSpec"]},{"name":"void accept(AbstractJavaSource<JavaClassSource> input)","description":"io.spine.tools.compiler.annotation.Annotator.TypeDeclarationAnnotation.accept","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/-type-declaration-annotation/accept.html","searchKeys":["accept","void accept(AbstractJavaSource<JavaClassSource> input)","io.spine.tools.compiler.annotation.Annotator.TypeDeclarationAnnotation.accept"]},{"name":"void addConfigureSeverityAction()","description":"io.spine.tools.compiler.check.SeverityConfigurer.addConfigureSeverityAction","location":"model-compiler/io.spine.tools.compiler.check/-severity-configurer/add-configure-severity-action.html","searchKeys":["addConfigureSeverityAction","void addConfigureSeverityAction()","io.spine.tools.compiler.check.SeverityConfigurer.addConfigureSeverityAction"]},{"name":"void annotate()","description":"io.spine.tools.compiler.annotation.ModuleAnnotator.annotate","location":"model-compiler/io.spine.tools.compiler.annotation/-module-annotator/annotate.html","searchKeys":["annotate","void annotate()","io.spine.tools.compiler.annotation.ModuleAnnotator.annotate"]},{"name":"void apply(Project project)","description":"io.spine.tools.gradle.compiler.CleaningPlugin.apply","location":"model-compiler/io.spine.tools.gradle.compiler/-cleaning-plugin/apply.html","searchKeys":["apply","void apply(Project project)","io.spine.tools.gradle.compiler.CleaningPlugin.apply"]},{"name":"void apply(Project project)","description":"io.spine.tools.gradle.compiler.ColumnGenPlugin.apply","location":"model-compiler/io.spine.tools.gradle.compiler/-column-gen-plugin/apply.html","searchKeys":["apply","void apply(Project project)","io.spine.tools.gradle.compiler.ColumnGenPlugin.apply"]},{"name":"void apply(Project project)","description":"io.spine.tools.gradle.compiler.DescriptorSetMergerPlugin.apply","location":"model-compiler/io.spine.tools.gradle.compiler/-descriptor-set-merger-plugin/apply.html","searchKeys":["apply","void apply(Project project)","io.spine.tools.gradle.compiler.DescriptorSetMergerPlugin.apply"]},{"name":"void apply(Project project)","description":"io.spine.tools.gradle.compiler.ErrorProneChecksPlugin.apply","location":"model-compiler/io.spine.tools.gradle.compiler/-error-prone-checks-plugin/apply.html","searchKeys":["apply","void apply(Project project)","io.spine.tools.gradle.compiler.ErrorProneChecksPlugin.apply"]},{"name":"void apply(Project project)","description":"io.spine.tools.gradle.compiler.ModelCompilerPlugin.apply","location":"model-compiler/io.spine.tools.gradle.compiler/-model-compiler-plugin/apply.html","searchKeys":["apply","void apply(Project project)","io.spine.tools.gradle.compiler.ModelCompilerPlugin.apply"]},{"name":"void apply(Project project)","description":"io.spine.tools.gradle.compiler.ProtoAnnotatorPlugin.apply","location":"model-compiler/io.spine.tools.gradle.compiler/-proto-annotator-plugin/apply.html","searchKeys":["apply","void apply(Project project)","io.spine.tools.gradle.compiler.ProtoAnnotatorPlugin.apply"]},{"name":"void apply(Project project)","description":"io.spine.tools.gradle.compiler.RejectionGenPlugin.apply","location":"model-compiler/io.spine.tools.gradle.compiler/-rejection-gen-plugin/apply.html","searchKeys":["apply","void apply(Project project)","io.spine.tools.gradle.compiler.RejectionGenPlugin.apply"]},{"name":"void columns(Action<? super GeneratedColumns> action)","description":"io.spine.tools.gradle.compiler.Extension.columns","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/columns.html","searchKeys":["columns","void columns(Action<? super GeneratedColumns> action)","io.spine.tools.gradle.compiler.Extension.columns"]},{"name":"void columns(Closure<?> closure)","description":"io.spine.tools.gradle.compiler.Extension.columns","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/columns.html","searchKeys":["columns","void columns(Closure<?> closure)","io.spine.tools.gradle.compiler.Extension.columns"]},{"name":"void configureProtocPlugins(NamedDomainObjectContainer<ExecutableLocator> plugins, Project project)","description":"io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.configureProtocPlugins","location":"model-compiler/io.spine.tools.gradle.compiler/-java-protoc-configuration-plugin/configure-protoc-plugins.html","searchKeys":["configureProtocPlugins","void configureProtocPlugins(NamedDomainObjectContainer<ExecutableLocator> plugins, Project project)","io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.configureProtocPlugins"]},{"name":"void customizeTask(GenerateProtoTask protocTask)","description":"io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.customizeTask","location":"model-compiler/io.spine.tools.gradle.compiler/-java-protoc-configuration-plugin/customize-task.html","searchKeys":["customizeTask","void customizeTask(GenerateProtoTask protocTask)","io.spine.tools.gradle.compiler.JavaProtocConfigurationPlugin.customizeTask"]},{"name":"void fields(Action<? super GeneratedFields> action)","description":"io.spine.tools.gradle.compiler.Extension.fields","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/fields.html","searchKeys":["fields","void fields(Action<? super GeneratedFields> action)","io.spine.tools.gradle.compiler.Extension.fields"]},{"name":"void fields(Closure<?> closure)","description":"io.spine.tools.gradle.compiler.Extension.fields","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/fields.html","searchKeys":["fields","void fields(Closure<?> closure)","io.spine.tools.gradle.compiler.Extension.fields"]},{"name":"void generateAnnotations(Action<? super CodeGenAnnotations> action)","description":"io.spine.tools.gradle.compiler.Extension.generateAnnotations","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/generate-annotations.html","searchKeys":["generateAnnotations","void generateAnnotations(Action<? super CodeGenAnnotations> action)","io.spine.tools.gradle.compiler.Extension.generateAnnotations"]},{"name":"void generateAnnotations(Closure<?> closure)","description":"io.spine.tools.gradle.compiler.Extension.generateAnnotations","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/generate-annotations.html","searchKeys":["generateAnnotations","void generateAnnotations(Closure<?> closure)","io.spine.tools.gradle.compiler.Extension.generateAnnotations"]},{"name":"void interfaces(Action<? super GeneratedInterfaces> action)","description":"io.spine.tools.gradle.compiler.Extension.interfaces","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/interfaces.html","searchKeys":["interfaces","void interfaces(Action<? super GeneratedInterfaces> action)","io.spine.tools.gradle.compiler.Extension.interfaces"]},{"name":"void interfaces(Closure<?> closure)","description":"io.spine.tools.gradle.compiler.Extension.interfaces","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/interfaces.html","searchKeys":["interfaces","void interfaces(Closure<?> closure)","io.spine.tools.gradle.compiler.Extension.interfaces"]},{"name":"void methods(Action<? super GeneratedMethods> action)","description":"io.spine.tools.gradle.compiler.Extension.methods","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/methods.html","searchKeys":["methods","void methods(Action<? super GeneratedMethods> action)","io.spine.tools.gradle.compiler.Extension.methods"]},{"name":"void methods(Closure<?> closure)","description":"io.spine.tools.gradle.compiler.Extension.methods","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/methods.html","searchKeys":["methods","void methods(Closure<?> closure)","io.spine.tools.gradle.compiler.Extension.methods"]},{"name":"void nestedClasses(Action<? super GeneratedNestedClasses> action)","description":"io.spine.tools.gradle.compiler.Extension.nestedClasses","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/nested-classes.html","searchKeys":["nestedClasses","void nestedClasses(Action<? super GeneratedNestedClasses> action)","io.spine.tools.gradle.compiler.Extension.nestedClasses"]},{"name":"void nestedClasses(Closure<?> closure)","description":"io.spine.tools.gradle.compiler.Extension.nestedClasses","location":"model-compiler/io.spine.tools.gradle.compiler/-extension/nested-classes.html","searchKeys":["nestedClasses","void nestedClasses(Closure<?> closure)","io.spine.tools.gradle.compiler.Extension.nestedClasses"]},{"name":"void rewriteSource<T extends JavaSource<T>>(SourceFile relativeSourcePath, SourceVisitor<T> visitor)","description":"io.spine.tools.compiler.annotation.Annotator.rewriteSource","location":"model-compiler/io.spine.tools.compiler.annotation/-annotator/rewrite-source.html","searchKeys":["rewriteSource","void rewriteSource<T extends JavaSource<T>>(SourceFile relativeSourcePath, SourceVisitor<T> visitor)","io.spine.tools.compiler.annotation.Annotator.rewriteSource"]}]
