[{"name":"ACTION","description":"io.spine.tools.gradle.testing.NoOp.ACTION","location":"plugin-testlib/io.spine.tools.gradle.testing/-no-op/-a-c-t-i-o-n/index.html","searchKeys":["ACTION","ACTION","io.spine.tools.gradle.testing.NoOp.ACTION"]},{"name":"public BooleanSubject dependsOn(TaskName taskName)","description":"io.spine.tools.gradle.testing.TaskSubject.dependsOn","location":"plugin-testlib/io.spine.tools.gradle.testing/-task-subject/depends-on.html","searchKeys":["dependsOn","public BooleanSubject dependsOn(TaskName taskName)","io.spine.tools.gradle.testing.TaskSubject.dependsOn"]},{"name":"public BooleanSubject dependsOn(Task task)","description":"io.spine.tools.gradle.testing.TaskSubject.dependsOn","location":"plugin-testlib/io.spine.tools.gradle.testing/-task-subject/depends-on.html","searchKeys":["dependsOn","public BooleanSubject dependsOn(Task task)","io.spine.tools.gradle.testing.TaskSubject.dependsOn"]},{"name":"public BooleanSubject isDependencyOf(Task task)","description":"io.spine.tools.gradle.testing.TaskSubject.isDependencyOf","location":"plugin-testlib/io.spine.tools.gradle.testing/-task-subject/is-dependency-of.html","searchKeys":["isDependencyOf","public BooleanSubject isDependencyOf(Task task)","io.spine.tools.gradle.testing.TaskSubject.isDependencyOf"]},{"name":"public BuildResult executeAndFail(TaskName taskName)","description":"io.spine.tools.gradle.testing.GradleProject.executeAndFail","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/execute-and-fail.html","searchKeys":["executeAndFail","public BuildResult executeAndFail(TaskName taskName)","io.spine.tools.gradle.testing.GradleProject.executeAndFail"]},{"name":"public BuildResult executeTask(TaskName taskName)","description":"io.spine.tools.gradle.testing.GradleProject.executeTask","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/execute-task.html","searchKeys":["executeTask","public BuildResult executeTask(TaskName taskName)","io.spine.tools.gradle.testing.GradleProject.executeTask"]},{"name":"public GradleProject.Builder addJavaFiles(Array<String> fileNames)","description":"io.spine.tools.gradle.testing.GradleProject.Builder.addJavaFiles","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/add-java-files.html","searchKeys":["addJavaFiles","public GradleProject.Builder addJavaFiles(Array<String> fileNames)","io.spine.tools.gradle.testing.GradleProject.Builder.addJavaFiles"]},{"name":"public GradleProject.Builder addProtoFile(String protoFileName)","description":"io.spine.tools.gradle.testing.GradleProject.Builder.addProtoFile","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/add-proto-file.html","searchKeys":["addProtoFile","public GradleProject.Builder addProtoFile(String protoFileName)","io.spine.tools.gradle.testing.GradleProject.Builder.addProtoFile"]},{"name":"public GradleProject.Builder addProtoFiles(Collection<String> protoFileNames)","description":"io.spine.tools.gradle.testing.GradleProject.Builder.addProtoFiles","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/add-proto-files.html","searchKeys":["addProtoFiles","public GradleProject.Builder addProtoFiles(Collection<String> protoFileNames)","io.spine.tools.gradle.testing.GradleProject.Builder.addProtoFiles"]},{"name":"public GradleProject.Builder createFile(String path, Iterable<String> lines)","description":"io.spine.tools.gradle.testing.GradleProject.Builder.createFile","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/create-file.html","searchKeys":["createFile","public GradleProject.Builder createFile(String path, Iterable<String> lines)","io.spine.tools.gradle.testing.GradleProject.Builder.createFile"]},{"name":"public GradleProject.Builder createProto(String fileName, Iterable<String> lines)","description":"io.spine.tools.gradle.testing.GradleProject.Builder.createProto","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/create-proto.html","searchKeys":["createProto","public GradleProject.Builder createProto(String fileName, Iterable<String> lines)","io.spine.tools.gradle.testing.GradleProject.Builder.createProto"]},{"name":"public GradleProject.Builder enableDebug()","description":"io.spine.tools.gradle.testing.GradleProject.Builder.enableDebug","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/enable-debug.html","searchKeys":["enableDebug","public GradleProject.Builder enableDebug()","io.spine.tools.gradle.testing.GradleProject.Builder.enableDebug"]},{"name":"public GradleProject.Builder setProjectFolder(File folder)","description":"io.spine.tools.gradle.testing.GradleProject.Builder.setProjectFolder","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/set-project-folder.html","searchKeys":["setProjectFolder","public GradleProject.Builder setProjectFolder(File folder)","io.spine.tools.gradle.testing.GradleProject.Builder.setProjectFolder"]},{"name":"public GradleProject.Builder setProjectName(String name)","description":"io.spine.tools.gradle.testing.GradleProject.Builder.setProjectName","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/set-project-name.html","searchKeys":["setProjectName","public GradleProject.Builder setProjectName(String name)","io.spine.tools.gradle.testing.GradleProject.Builder.setProjectName"]},{"name":"public GradleProject.Builder withPluginClasspath()","description":"io.spine.tools.gradle.testing.GradleProject.Builder.withPluginClasspath","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/with-plugin-classpath.html","searchKeys":["withPluginClasspath","public GradleProject.Builder withPluginClasspath()","io.spine.tools.gradle.testing.GradleProject.Builder.withPluginClasspath"]},{"name":"public GradleProject build()","description":"io.spine.tools.gradle.testing.GradleProject.Builder.build","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/build.html","searchKeys":["build","public GradleProject build()","io.spine.tools.gradle.testing.GradleProject.Builder.build"]},{"name":"public ImmutableSet<Dependency> exclusions()","description":"io.spine.tools.gradle.testing.MemoizingDependant.exclusions","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/exclusions.html","searchKeys":["exclusions","public ImmutableSet<Dependency> exclusions()","io.spine.tools.gradle.testing.MemoizingDependant.exclusions"]},{"name":"public ImmutableSet<GradlePlugin<?>> plugins()","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry.plugins","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/plugins.html","searchKeys":["plugins","public ImmutableSet<GradlePlugin<?>> plugins()","io.spine.tools.gradle.testing.MemoizingPluginRegistry.plugins"]},{"name":"public ImmutableSet<Path> javaSourceDirs()","description":"io.spine.tools.gradle.testing.MemoizingSourceSuperset.javaSourceDirs","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-source-superset/java-source-dirs.html","searchKeys":["javaSourceDirs","public ImmutableSet<Path> javaSourceDirs()","io.spine.tools.gradle.testing.MemoizingSourceSuperset.javaSourceDirs"]},{"name":"public ImmutableSet<PluginScript> pluginScripts()","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry.pluginScripts","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/plugin-scripts.html","searchKeys":["pluginScripts","public ImmutableSet<PluginScript> pluginScripts()","io.spine.tools.gradle.testing.MemoizingPluginRegistry.pluginScripts"]},{"name":"public ImmutableSet<String> dependencies()","description":"io.spine.tools.gradle.testing.MemoizingDependant.dependencies","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/dependencies.html","searchKeys":["dependencies","public ImmutableSet<String> dependencies()","io.spine.tools.gradle.testing.MemoizingDependant.dependencies"]},{"name":"public ImmutableSet<String> forcedDependencies()","description":"io.spine.tools.gradle.testing.MemoizingDependant.forcedDependencies","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/forced-dependencies.html","searchKeys":["forcedDependencies","public ImmutableSet<String> forcedDependencies()","io.spine.tools.gradle.testing.MemoizingDependant.forcedDependencies"]},{"name":"public boolean isApplied(GradlePlugin<?> plugin)","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry.isApplied","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/is-applied.html","searchKeys":["isApplied","public boolean isApplied(GradlePlugin<?> plugin)","io.spine.tools.gradle.testing.MemoizingPluginRegistry.isApplied"]},{"name":"public class Builder","description":"io.spine.tools.gradle.testing.GradleProject.Builder","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/-builder/index.html","searchKeys":["Builder","public class Builder","io.spine.tools.gradle.testing.GradleProject.Builder"]},{"name":"public class GradleTruth","description":"io.spine.tools.gradle.testing.GradleTruth","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-truth/index.html","searchKeys":["GradleTruth","public class GradleTruth","io.spine.tools.gradle.testing.GradleTruth"]},{"name":"public enum NoOp","description":"io.spine.tools.gradle.testing.NoOp","location":"plugin-testlib/io.spine.tools.gradle.testing/-no-op/index.html","searchKeys":["NoOp","public enum NoOp","io.spine.tools.gradle.testing.NoOp"]},{"name":"public final class GradleProject","description":"io.spine.tools.gradle.testing.GradleProject","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/index.html","searchKeys":["GradleProject","public final class GradleProject","io.spine.tools.gradle.testing.GradleProject"]},{"name":"public final class MemoizingDependant","description":"io.spine.tools.gradle.testing.MemoizingDependant","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/index.html","searchKeys":["MemoizingDependant","public final class MemoizingDependant","io.spine.tools.gradle.testing.MemoizingDependant"]},{"name":"public final class MemoizingPluginRegistry","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/index.html","searchKeys":["MemoizingPluginRegistry","public final class MemoizingPluginRegistry","io.spine.tools.gradle.testing.MemoizingPluginRegistry"]},{"name":"public final class MemoizingSourceSuperset","description":"io.spine.tools.gradle.testing.MemoizingSourceSuperset","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-source-superset/index.html","searchKeys":["MemoizingSourceSuperset","public final class MemoizingSourceSuperset","io.spine.tools.gradle.testing.MemoizingSourceSuperset"]},{"name":"public final class TaskSubject","description":"io.spine.tools.gradle.testing.TaskSubject","location":"plugin-testlib/io.spine.tools.gradle.testing/-task-subject/index.html","searchKeys":["TaskSubject","public final class TaskSubject","io.spine.tools.gradle.testing.TaskSubject"]},{"name":"public static Action<T> action<T>()","description":"io.spine.tools.gradle.testing.NoOp.action","location":"plugin-testlib/io.spine.tools.gradle.testing/-no-op/action.html","searchKeys":["action","public static Action<T> action<T>()","io.spine.tools.gradle.testing.NoOp.action"]},{"name":"public static Array<NoOp> values()","description":"io.spine.tools.gradle.testing.NoOp.values","location":"plugin-testlib/io.spine.tools.gradle.testing/-no-op/values.html","searchKeys":["values","public static Array<NoOp> values()","io.spine.tools.gradle.testing.NoOp.values"]},{"name":"public static Factory<TaskSubject, Task> tasks()","description":"io.spine.tools.gradle.testing.TaskSubject.tasks","location":"plugin-testlib/io.spine.tools.gradle.testing/-task-subject/tasks.html","searchKeys":["tasks","public static Factory<TaskSubject, Task> tasks()","io.spine.tools.gradle.testing.TaskSubject.tasks"]},{"name":"public static GradleProject.Builder newBuilder()","description":"io.spine.tools.gradle.testing.GradleProject.newBuilder","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/new-builder.html","searchKeys":["newBuilder","public static GradleProject.Builder newBuilder()","io.spine.tools.gradle.testing.GradleProject.newBuilder"]},{"name":"public static NoOp valueOf(String name)","description":"io.spine.tools.gradle.testing.NoOp.valueOf","location":"plugin-testlib/io.spine.tools.gradle.testing/-no-op/value-of.html","searchKeys":["valueOf","public static NoOp valueOf(String name)","io.spine.tools.gradle.testing.NoOp.valueOf"]},{"name":"public static String javaPlugin()","description":"io.spine.tools.gradle.testing.GradleProject.javaPlugin","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-project/java-plugin.html","searchKeys":["javaPlugin","public static String javaPlugin()","io.spine.tools.gradle.testing.GradleProject.javaPlugin"]},{"name":"public static TaskSubject assertThat(Task task)","description":"io.spine.tools.gradle.testing.GradleTruth.assertThat","location":"plugin-testlib/io.spine.tools.gradle.testing/-gradle-truth/assert-that.html","searchKeys":["assertThat","public static TaskSubject assertThat(Task task)","io.spine.tools.gradle.testing.GradleTruth.assertThat"]},{"name":"public void MemoizingDependant()","description":"io.spine.tools.gradle.testing.MemoizingDependant.MemoizingDependant","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/-memoizing-dependant.html","searchKeys":["MemoizingDependant","public void MemoizingDependant()","io.spine.tools.gradle.testing.MemoizingDependant.MemoizingDependant"]},{"name":"public void MemoizingPluginRegistry()","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry.MemoizingPluginRegistry","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/-memoizing-plugin-registry.html","searchKeys":["MemoizingPluginRegistry","public void MemoizingPluginRegistry()","io.spine.tools.gradle.testing.MemoizingPluginRegistry.MemoizingPluginRegistry"]},{"name":"public void MemoizingSourceSuperset()","description":"io.spine.tools.gradle.testing.MemoizingSourceSuperset.MemoizingSourceSuperset","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-source-superset/-memoizing-source-superset.html","searchKeys":["MemoizingSourceSuperset","public void MemoizingSourceSuperset()","io.spine.tools.gradle.testing.MemoizingSourceSuperset.MemoizingSourceSuperset"]},{"name":"public void apply(GradlePlugin<?> plugin)","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry.apply","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/apply.html","searchKeys":["apply","public void apply(GradlePlugin<?> plugin)","io.spine.tools.gradle.testing.MemoizingPluginRegistry.apply"]},{"name":"public void apply(PluginScript pluginScript)","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry.apply","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/apply.html","searchKeys":["apply","public void apply(PluginScript pluginScript)","io.spine.tools.gradle.testing.MemoizingPluginRegistry.apply"]},{"name":"public void depend(ConfigurationName configuration, String notation)","description":"io.spine.tools.gradle.testing.MemoizingDependant.depend","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/depend.html","searchKeys":["depend","public void depend(ConfigurationName configuration, String notation)","io.spine.tools.gradle.testing.MemoizingDependant.depend"]},{"name":"public void exclude(Dependency dependency)","description":"io.spine.tools.gradle.testing.MemoizingDependant.exclude","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/exclude.html","searchKeys":["exclude","public void exclude(Dependency dependency)","io.spine.tools.gradle.testing.MemoizingDependant.exclude"]},{"name":"public void execute(Object ignored)","description":"io.spine.tools.gradle.testing.NoOp.execute","location":"plugin-testlib/io.spine.tools.gradle.testing/-no-op/execute.html","searchKeys":["execute","public void execute(Object ignored)","io.spine.tools.gradle.testing.NoOp.execute"]},{"name":"public void force(Artifact artifact)","description":"io.spine.tools.gradle.testing.MemoizingDependant.force","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/force.html","searchKeys":["force","public void force(Artifact artifact)","io.spine.tools.gradle.testing.MemoizingDependant.force"]},{"name":"public void force(String notation)","description":"io.spine.tools.gradle.testing.MemoizingDependant.force","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/force.html","searchKeys":["force","public void force(String notation)","io.spine.tools.gradle.testing.MemoizingDependant.force"]},{"name":"public void register(GeneratedSourceRoot directory)","description":"io.spine.tools.gradle.testing.MemoizingSourceSuperset.register","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-source-superset/register.html","searchKeys":["register","public void register(GeneratedSourceRoot directory)","io.spine.tools.gradle.testing.MemoizingSourceSuperset.register"]},{"name":"public void removeForcedDependency(Dependency dependency)","description":"io.spine.tools.gradle.testing.MemoizingDependant.removeForcedDependency","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/remove-forced-dependency.html","searchKeys":["removeForcedDependency","public void removeForcedDependency(Dependency dependency)","io.spine.tools.gradle.testing.MemoizingDependant.removeForcedDependency"]},{"name":"public void removeForcedDependency(String notation)","description":"io.spine.tools.gradle.testing.MemoizingDependant.removeForcedDependency","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-dependant/remove-forced-dependency.html","searchKeys":["removeForcedDependency","public void removeForcedDependency(String notation)","io.spine.tools.gradle.testing.MemoizingDependant.removeForcedDependency"]},{"name":"public void with<P extends Plugin<Project>>(GradlePlugin<P> plugin, Consumer<P> action)","description":"io.spine.tools.gradle.testing.MemoizingPluginRegistry.with","location":"plugin-testlib/io.spine.tools.gradle.testing/-memoizing-plugin-registry/with.html","searchKeys":["with","public void with<P extends Plugin<Project>>(GradlePlugin<P> plugin, Consumer<P> action)","io.spine.tools.gradle.testing.MemoizingPluginRegistry.with"]}]
